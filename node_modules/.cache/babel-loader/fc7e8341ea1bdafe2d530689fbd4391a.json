{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport QuestionBox from \"./questionBox\";\nimport \"./quiz.css\";\nimport useState from \"react\";\nimport fire from \"../../config/fire\";\nimport { Button, ButtonGroup, Toast } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport { Label } from \"semantic-ui-react\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAns: null,\n      options: [],\n      //  questions: \"\",\n      disabled: true,\n      currentQuest: 0,\n      scores: 0\n    };\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.questions);\n    };\n\n    this.nextQuestion = answer => {\n      // e.preventDefault();\n      const _this$state = this.state,\n            userAns = _this$state.userAns,\n            score = _this$state.score;\n\n      if (userAns === answer) {\n        this.setState({\n          score: score + 1\n        });\n      }\n\n      this.setState({\n        currentQuestion: this.state.currentQuestion + 1\n      });\n      console.log(this.state.currentQuest);\n    };\n\n    this.checkAns = answer => {\n      const _this$state2 = this.state,\n            userAns = _this$state2.userAns,\n            score = _this$state2.score;\n      this.setState({\n        userAns: answer,\n        disabled: false\n      });\n      console.log(userAns);\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      }); //console.log(this.state.questions);\n    }\n  }\n\n  /*\n  ANSWER = option => {\n    const [answer, setAnswer] = useState(option);\n     {\n      answer.map((text, index) => (\n        <Button\n          key={index}\n          onClick={() => {\n            setAnswer([text]);\n          }}\n        >\n          {text}\n        </Button>\n      ));\n    }\n  };\n  */\n  render() {\n    const _this$state3 = this.state,\n          userAns = _this$state3.userAns,\n          options = _this$state3.options,\n          currentQuest = _this$state3.currentQuest;\n    return React.createElement(\"div\", {\n      className: \"lol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), this.state.questions, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), options.map(option => React.createElement(Button, {\n      key: option.id,\n      className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n      onClick: () => this.checkAns(option) // key={id}\n      //  question={questions}\n      // option={options}\n      // answer={answers}\n      // selected={answer => this.checkAns(answer, option)}\n      //  onClick={this.ANSWER}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, option)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.checkAns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"CHECK\"), React.createElement(Button, {\n      onClick: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"NEXT\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), currentQuest === Quizdata.length - 1 ? alert(\"Quiz FINISHED\") : null, this.state.scores);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","QuestionBox","useState","fire","Button","ButtonGroup","Toast","Questions","Quizdata","Label","Quiz","state","userAns","options","disabled","currentQuest","scores","loadQuiz","setState","questions","question","answer","pictures","picture","console","log","nextQuestion","score","currentQuestion","checkAns","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","option","id","length","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport QuestionBox from \"./questionBox\";\nimport \"./quiz.css\";\nimport useState from \"react\";\nimport fire from \"../../config/fire\";\nimport { Button, ButtonGroup, Toast } from \"react-bootstrap\";\n\nimport Questions, { Quizdata } from \"./questions\";\nimport { Label } from \"semantic-ui-react\";\nclass Quiz extends Component {\n  // super(props);\n  state = {\n    userAns: null,\n    options: [],\n    //  questions: \"\",\n    disabled: true,\n    currentQuest: 0,\n    scores: 0\n  };\n\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.questions);\n  };\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n      //console.log(this.state.questions);\n    }\n  }\n\n  nextQuestion = answer => {\n    // e.preventDefault();\n    const { userAns, score } = this.state;\n    if (userAns === answer) {\n      this.setState({\n        score: score + 1\n      });\n    }\n    this.setState({\n      currentQuestion: this.state.currentQuestion + 1\n    });\n    console.log(this.state.currentQuest);\n  };\n\n  checkAns = answer => {\n    const { userAns, score } = this.state;\n\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n    console.log(userAns);\n  };\n\n  /*\n  ANSWER = option => {\n    const [answer, setAnswer] = useState(option);\n\n    {\n      answer.map((text, index) => (\n        <Button\n          key={index}\n          onClick={() => {\n            setAnswer([text]);\n          }}\n        >\n          {text}\n        </Button>\n      ));\n    }\n  };\n*/\n  render() {\n    const { userAns, options, currentQuest } = this.state;\n    return (\n      <div className=\"lol\">\n        <br></br>\n        {this.state.questions}\n        <br></br>\n        {/* {this.state.options.map(\n          item => (\n            <button\n              id=\"optionsData\"\n              className=\"ui floating message options\"\n              className={userAns === this.state.options ? \"selected\" : null}\n              onClick={() => this.checkAnswer(option)}\n            >\n              {item}\n            </button>\n          ) maps the options on the page\n        )}\n          */}\n\n        {options.map(option => (\n          <Button\n            key={option.id}\n            className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n            onClick={() => this.checkAns(option)}\n            // key={id}\n            //  question={questions}\n            // option={options}\n            // answer={answers}\n            // selected={answer => this.checkAns(answer, option)}\n            //  onClick={this.ANSWER}\n          >\n            {option}\n          </Button>\n        ))}\n\n        <br></br>\n        <Button onClick={this.checkAns}>CHECK</Button>\n        <Button onClick={this.nextQuestion}>NEXT</Button>\n        <br></br>\n\n        {currentQuest === Quizdata.length - 1 ? alert(\"Quiz FINISHED\") : null}\n        {this.state.scores}\n      </div>\n    );\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}