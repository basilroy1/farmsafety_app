{"ast":null,"code":"const map = new WeakMap();\n\nconst privates = function (object) {\n  if (!map.has(object)) {\n    map.set(object, {});\n  }\n\n  return map.get(object);\n};\n\nfunction getState() {\n  return privates(this).state;\n}\n\nfunction setState(state) {\n  if (typeof state !== 'object' || state === null) return;\n  const that = privates(this);\n  if (typeof that.state !== 'object' || that.state === null) that.state = {};\n  const oldState = that.state;\n  const newState = that.state = Object.assign({}, that.state, state);\n  if (Array.isArray(this.constructor.observedState) === false) return;\n  if (typeof this.stateChangedCallback !== 'function') return;\n  this.constructor.observedState.forEach(function (name) {\n    if (oldState[name] === newState[name]) return;\n    this.stateChangedCallback(name, oldState[name], newState[name]);\n  }, this);\n}\n\nmodule.exports = function useState(target) {\n  if (typeof target !== 'function') throw new TypeError();\n  target.prototype.getState = getState;\n  target.prototype.setState = setState;\n  return target;\n};","map":null,"metadata":{},"sourceType":"script"}