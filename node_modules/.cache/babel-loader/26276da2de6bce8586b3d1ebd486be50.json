{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight } from \"react-icons/fa\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport Welcome from \"../home/welcome\";\nimport UserProfile from \"./userProfile\"; //import { Label } from \"semantic-ui-react\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz2 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz3 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz4 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz5 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.nextQuestion = e => {\n      // e.preventDefault();\n      if (this.state.userAns === null) {\n        alert(\"choose an option\");\n        return;\n      }\n\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      });\n      console.log(this.state.currentQuest);\n      this.setState({\n        userAns: null\n      }); // console.log(this.state.currentQuest);\n    };\n\n    this.checkAns = userAns => {\n      const _this$state = this.state,\n            answer = _this$state.answer,\n            scores = _this$state.scores;\n      this.setState({\n        userAns: answer,\n        disabled: false\n      });\n      console.log(userAns);\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1\n        });\n      } else {\n        console.log(\"Wrong\");\n        alert(\"Correct answer is \" + answer);\n      }\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\");\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4;\n      const master = this.props.userLevel5;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.pushtoDB2 = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4;\n      const master = this.props.userLevel5;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        ///need to chnage the name of these as it overrides the value in the database\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master\n      });\n      this.setState({\n        levelRook: rookie\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.disableCheckLevel = () => {\n      this.setState({\n        levelDisable: false\n      });\n    };\n\n    this.finishQuiz = () => {\n      if (this.state.currentQuestion === Quizdata.length - 1) {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      levelDisable: true,\n      currentQuest: 0,\n      isEnd: false,\n      scores: 0,\n      pictures: \"\",\n      levelRook: false,\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    }; //  this.changeToquiz2 = this.changeToquiz2.bind();\n  }\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userAns = _this$state2.userAns,\n          options = _this$state2.options,\n          currentQuest = _this$state2.currentQuest,\n          isEnd = _this$state2.isEnd;\n    {\n      isEnd && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Quiz Finished, You scored \", this.state.scores, \"/\", Quizdata.length - 1, \"!\"));\n    }\n    {\n      !isEnd && React.createElement(\"div\", {\n        className: \"quizForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        animated: true,\n        now: this.state.currentQuest * 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      })), this.state.questions, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Q\", this.state.currentQuest), this.state.pictures, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), options.map(option => React.createElement(Button, {\n        size: \"lg\",\n        block: true,\n        key: option.id,\n        className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n        onClick: () => this.checkAns(option),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, option)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: () => this.checkAns(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"CHECK \", React.createElement(FaHorse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      })), currentQuest < Quizdata.length - 1 && React.createElement(Button, {\n        disabled: this.state.disabled,\n        onClick: () => {\n          this.nextQuestion();\n          this.pushtoDB();\n          this.finishQuiz();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"NEXT \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), currentQuest === Quizdata.length - 1 && React.createElement(Button, {\n        onClick: () => {\n          this.finishQuiz();\n          this.pushtoDB2();\n          this.disableCheckLevel();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaHorse","FaArrowRight","Button","ProgressBar","Alert","Questions","Quizdata","Quizdata2","Quizdata3","Quizdata4","Quizdata5","Welcome","UserProfile","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","answer","pictures","picture","console","log","loadQuiz2","loadQuiz3","loadQuiz4","loadQuiz5","nextQuestion","e","userAns","alert","checkAns","scores","disabled","logout","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","rookie","userLevel1","student","userLevel2","intermediate","userLevel3","expert","userLevel4","master","userLevel5","set","ID","currentUser","uid","UserEmail","email","Question","UserAnswer","Score","UserLevel","UserLevelStudent","UserLevelIntermediate","UserLevelExpert","UserLevelMaster","pushtoDB2","levelRook","disableCheckLevel","levelDisable","finishQuiz","currentQuestion","length","isEnd","level1","level2","level3","level4","level5","componentDidMount","componentDidUpdate","prevProps","prevState","render","textAlign","map","option","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight } from \"react-icons/fa\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport Welcome from \"../home/welcome\";\nimport UserProfile from \"./userProfile\";\n\n//import { Label } from \"semantic-ui-react\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      levelDisable: true,\n      currentQuest: 0,\n      isEnd: false,\n      scores: 0,\n      pictures: \"\",\n      levelRook: false,\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    };\n    //  this.changeToquiz2 = this.changeToquiz2.bind();\n  }\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz2 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata2[currentQuest].question,\n        options: Quizdata2[currentQuest].options,\n        answer: Quizdata2[currentQuest].answer,\n        pictures: Quizdata2[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz3 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata3[currentQuest].question,\n        options: Quizdata3[currentQuest].options,\n        answer: Quizdata3[currentQuest].answer,\n        pictures: Quizdata3[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  false;\n  loadQuiz4 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata4[currentQuest].question,\n        options: Quizdata4[currentQuest].options,\n        answer: Quizdata4[currentQuest].answer,\n        pictures: Quizdata4[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz5 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata5[currentQuest].question,\n        options: Quizdata5[currentQuest].options,\n        answer: Quizdata5[currentQuest].answer,\n        pictures: Quizdata5[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  nextQuestion = e => {\n    // e.preventDefault();\n    if (this.state.userAns === null) {\n      alert(\"choose an option\");\n      return;\n    }\n    this.setState({\n      currentQuest: this.state.currentQuest + 1\n    });\n    console.log(this.state.currentQuest);\n    this.setState({\n      userAns: null\n    });\n    // console.log(this.state.currentQuest);\n  };\n\n  checkAns = userAns => {\n    const { answer, scores } = this.state;\n\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n    console.log(userAns);\n    if (userAns === answer) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: scores + 1\n      });\n    } else {\n      console.log(\"Wrong\");\n      alert(\"Correct answer is \" + answer);\n    }\n  };\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\");\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie,\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master\n    });\n\n    console.log(\"Sent to Database\");\n  };\n\n  pushtoDB2 = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie, ///need to chnage the name of these as it overrides the value in the database\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master\n    });\n    this.setState({\n      levelRook: rookie\n    });\n    console.log(\"Sent to Database\");\n  };\n\n  disableCheckLevel = () => {\n    this.setState({\n      levelDisable: false\n    });\n  };\n\n  finishQuiz = () => {\n    if (this.state.currentQuestion === Quizdata.length - 1) {\n      this.setState({\n        isEnd: true\n      });\n    }\n  };\n\n  render() {\n    const { userAns, options, currentQuest, isEnd } = this.state;\n    {\n      isEnd && (\n        <div>\n          <h3 className=\"SummaryResults\">\n            Quiz Finished, You scored {this.state.scores}/{Quizdata.length - 1}!\n          </h3>\n        </div>\n      );\n    }\n\n    {\n      !isEnd && (\n        <div className=\"quizForm\">\n          <br></br>\n          {/*  <Welcome stateQuiz1={this.changeToquiz2} />*/}\n\n          <div>\n            <ProgressBar animated now={this.state.currentQuest * 10} />\n          </div>\n          {this.state.questions}\n          <br></br>\n          <p style={{ textAlign: \"center\" }}>Q{this.state.currentQuest}</p>\n          {this.state.pictures}\n          <br></br>\n\n          {options.map(option => (\n            <Button\n              size=\"lg\"\n              block\n              key={option.id}\n              className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n              onClick={() => this.checkAns(option)}\n            >\n              {option}\n            </Button>\n          ))}\n\n          <br></br>\n          <Button onClick={() => this.checkAns()}>\n            CHECK <FaHorse />\n          </Button>\n          {currentQuest < Quizdata.length - 1 && (\n            <Button\n              disabled={this.state.disabled}\n              onClick={() => {\n                this.nextQuestion();\n                this.pushtoDB();\n                this.finishQuiz();\n              }}\n            >\n              NEXT <FaArrowRight />\n            </Button>\n          )}\n          <br></br>\n\n          {currentQuest === Quizdata.length - 1 && (\n            <Button\n              onClick={() => {\n                this.finishQuiz();\n                this.pushtoDB2();\n                this.disableCheckLevel();\n              }}\n            >\n              Finish\n            </Button>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}