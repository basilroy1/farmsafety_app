{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\"; //import QuestionBox from \"./questionBox\";\n\nimport \"./quiz.css\"; //import from \"./login\"\n//import useState from \"react\";\n\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight } from \"react-icons/fa\";\nimport { Button, ButtonGroup, Toast, ProgressBar } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport Login from \"./login\"; //import { Label } from \"semantic-ui-react\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: true,\n      currentQuest: 0,\n      scores: 0,\n      pictures: \"\"\n    };\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.nextQuestion = e => {\n      // e.preventDefault();\n      if (this.state.userAns === null) {\n        alert(\"choose an option\");\n        return;\n      }\n\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      });\n      this.setState({\n        userAns: null\n      }); // console.log(this.state.currentQuest);\n    };\n\n    this.checkAns = userAns => {\n      const _this$state = this.state,\n            answer = _this$state.answer,\n            scores = _this$state.scores;\n      this.setState({\n        userAns: answer,\n        disabled: false\n      });\n      console.log(userAns);\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1\n        });\n      } else {\n        console.log(\"Wrong\");\n        alert(\"Correct answer is \" + answer);\n      }\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\");\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        // Username: this.state.userName,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.pushtoDB2 = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      newRef.set({\n        Score: this.state.scores\n      });\n      console.log(\"Sent to Database\");\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userAns = _this$state2.userAns,\n          options = _this$state2.options,\n          currentQuest = _this$state2.currentQuest,\n          picture = _this$state2.picture;\n    return React.createElement(\"div\", {\n      className: \"quizForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(ProgressBar, {\n      animated: true,\n      now: this.state.currentQuest * 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), this.state.questions, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Q\", this.state.currentQuest), pictures.map(picture => React.createElement(Button, {\n      key: picture.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, picture)), options.map(option => React.createElement(Button, {\n      key: option.id,\n      className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n      onClick: () => this.checkAns(option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, option)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.checkAns(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"CHECK \", React.createElement(FaHorse, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => {\n        this.nextQuestion();\n        this.pushtoDB();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"NEXT \", React.createElement(FaArrowRight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"LogOut\"), currentQuest === Quizdata.length - 1 ? React.createElement(Button, {\n      onClick: this.pushtoDB2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Finish\") : null, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Quiz score : \", this.state.scores, \"/\", Quizdata.length - 1));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaHorse","FaArrowRight","Button","ButtonGroup","Toast","ProgressBar","Questions","Quizdata","Login","Quiz","state","userAns","options","disabled","currentQuest","scores","pictures","loadQuiz","setState","questions","question","answer","picture","console","log","nextQuestion","e","alert","checkAns","logout","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","set","ID","currentUser","uid","UserEmail","email","Question","UserAnswer","pushtoDB2","Score","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","id","option","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import QuestionBox from \"./questionBox\";\nimport \"./quiz.css\";\n//import from \"./login\"\n//import useState from \"react\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight } from \"react-icons/fa\";\nimport { Button, ButtonGroup, Toast, ProgressBar } from \"react-bootstrap\";\n\nimport Questions, { Quizdata } from \"./questions\";\nimport Login from \"./login\";\n//import { Label } from \"semantic-ui-react\";\nclass Quiz extends Component {\n  state = {\n    userAns: null,\n    options: [],\n    disabled: true,\n    currentQuest: 0,\n    scores: 0,\n    pictures: \"\"\n  };\n\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  nextQuestion = e => {\n    // e.preventDefault();\n    if (this.state.userAns === null) {\n      alert(\"choose an option\");\n      return;\n    }\n    this.setState({\n      currentQuest: this.state.currentQuest + 1\n    });\n    this.setState({\n      userAns: null\n    });\n    // console.log(this.state.currentQuest);\n  };\n\n  checkAns = userAns => {\n    const { answer, scores } = this.state;\n\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n    console.log(userAns);\n    if (userAns === answer) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: scores + 1\n      });\n    } else {\n      console.log(\"Wrong\");\n      alert(\"Correct answer is \" + answer);\n    }\n  };\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\");\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      // Username: this.state.userName,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns\n    });\n\n    console.log(\"Sent to Database\");\n  };\n\n  pushtoDB2 = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    newRef.set({\n      Score: this.state.scores\n    });\n    console.log(\"Sent to Database\");\n  };\n\n  render() {\n    const { userAns, options, currentQuest, picture } = this.state;\n    return (\n      <div className=\"quizForm\">\n        <br></br>\n        <div>\n          <ProgressBar animated now={this.state.currentQuest * 9} />\n        </div>\n        {this.state.questions}\n        <br></br>\n        <p>Q{this.state.currentQuest}</p>\n        {pictures.map(picture => (\n          <Button key={picture.id}>{picture}</Button>\n        ))}\n        {options.map(option => (\n          <Button\n            key={option.id}\n            className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n            onClick={() => this.checkAns(option)}\n          >\n            {option}\n          </Button>\n        ))}\n\n        <br></br>\n        <Button onClick={() => this.checkAns()}>\n          CHECK <FaHorse />\n        </Button>\n        <Button\n          onClick={() => {\n            this.nextQuestion();\n            this.pushtoDB();\n          }}\n        >\n          NEXT <FaArrowRight />\n        </Button>\n\n        <br></br>\n\n        <Button onClick={this.logout}>LogOut</Button>\n\n        {currentQuest === Quizdata.length - 1 ? (\n          <Button onClick={this.pushtoDB2}>Finish</Button>\n        ) : null}\n        <span>\n          Quiz score : {this.state.scores}/{Quizdata.length - 1}\n        </span>\n      </div>\n    );\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}