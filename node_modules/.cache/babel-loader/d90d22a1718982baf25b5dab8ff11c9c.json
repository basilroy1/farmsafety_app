{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight, FaSadTear, FaSmile } from \"react-icons/fa\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport Welcome from \"../home/welcome\";\nimport UserProfile from \"./userProfile\";\nimport Test from \"../home/test\"; //import { Label } from \"semantic-ui-react\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz2 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz3 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz4 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz5 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\");\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4;\n      const master = this.props.userLevel5;\n      const rankVal = this.props.rankValue;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master,\n        RankValue: rankVal\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.pushtoDB2 = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4;\n      const master = this.props.userLevel5;\n      const rankVal = this.props.rankValue;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        ///need to chnage the name of these as it overrides the value in the database\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master,\n        RankValue: rankVal\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.nextQuestion = () => {\n      const userAns = this.state.userAns; // e.preventDefault();\n\n      if (userAns === null) {\n        alert(\"choose an option\");\n        return;\n      }\n\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      });\n      this.setState({\n        userAns: null\n      });\n    };\n\n    this.checkAns = userAns => {\n      const _this$state = this.state,\n            answer = _this$state.answer,\n            scores = _this$state.scores;\n      this.setState({\n        userAns: answer,\n        disabled: false\n      });\n      console.log(userAns);\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1\n        });\n      } else {\n        this.setState({\n          scores: scores\n        });\n        console.log(\"Wrong\"); //  alert(\"Correct answer is \" + answer);\n      }\n\n      console.log(\"score : \" + this.state.scores);\n    };\n\n    this.finishQuiz = () => {\n      if (this.state.currentQuest === Quizdata.length - 1) {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.loadQuizComponent = () => {\n      if (this.state.currentQuest === Quizdata.length - 1 && this.state.scores < 5) {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      // levelDisable: true,\n      currentQuest: 0,\n      isEnd: false,\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    }; //  this.changeToquiz2 = this.changeToquiz2.bind();\n  }\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userAns = _this$state2.userAns,\n          scores = _this$state2.scores,\n          options = _this$state2.options,\n          currentQuest = _this$state2.currentQuest,\n          isEnd = _this$state2.isEnd;\n\n    if (isEnd && scores >= 5) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Quiz Finished, You passed \", this.state.scores, \"/\", Quizdata.length - 1, \" \", React.createElement(FaSmile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }), \"!\"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"next challenge\"));\n    } else if (isEnd && scores < 5) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Quiz Finished, You failed \", this.state.scores, \"/\", Quizdata.length - 1, \" \", React.createElement(FaSadTear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }), \"!\"), React.createElement(Test, {\n        result: this.loadQuizComponent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"try again\")));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"quizForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        animated: true,\n        now: this.state.currentQuest * 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), this.state.questions, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, \"Q\", this.state.currentQuest), this.state.pictures, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), options.map(option => React.createElement(Button, {\n        size: \"lg\",\n        block: true,\n        key: option.id,\n        className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n        onClick: () => this.checkAns(option),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, option)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: () => this.checkAns(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"CHECK \", React.createElement(FaHorse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      })), currentQuest < Quizdata.length - 1 && React.createElement(Button, {\n        disabled: this.state.disabled,\n        onClick: () => {\n          this.nextQuestion();\n          this.pushtoDB();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"NEXT \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), currentQuest === Quizdata.length - 1 && React.createElement(Button, {\n        onClick: () => {\n          this.finishQuiz();\n          this.pushtoDB2(); //  this.disableCheckLevel();\n\n          this.props.handleDisableValue(scores); // child to parent\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaHorse","FaArrowRight","FaSadTear","FaSmile","Button","ProgressBar","Alert","Questions","Quizdata","Quizdata2","Quizdata3","Quizdata4","Quizdata5","Welcome","UserProfile","Test","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","answer","pictures","picture","console","log","loadQuiz2","loadQuiz3","loadQuiz4","loadQuiz5","logout","e","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","rookie","userLevel1","student","userLevel2","intermediate","userLevel3","expert","userLevel4","master","userLevel5","rankVal","rankValue","set","ID","currentUser","uid","UserEmail","email","Question","UserAnswer","userAns","Score","scores","UserLevel","UserLevelStudent","UserLevelIntermediate","UserLevelExpert","UserLevelMaster","RankValue","pushtoDB2","nextQuestion","alert","checkAns","disabled","finishQuiz","length","isEnd","loadQuizComponent","level1","level2","level3","level4","level5","componentDidMount","componentDidUpdate","prevProps","prevState","render","textAlign","map","option","id","handleDisableValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight, FaSadTear, FaSmile } from \"react-icons/fa\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport Welcome from \"../home/welcome\";\nimport UserProfile from \"./userProfile\";\nimport Test from \"../home/test\";\n\n//import { Label } from \"semantic-ui-react\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      // levelDisable: true,\n      currentQuest: 0,\n      isEnd: false,\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    };\n    //  this.changeToquiz2 = this.changeToquiz2.bind();\n  }\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz2 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata2[currentQuest].question,\n        options: Quizdata2[currentQuest].options,\n        answer: Quizdata2[currentQuest].answer,\n        pictures: Quizdata2[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz3 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata3[currentQuest].question,\n        options: Quizdata3[currentQuest].options,\n        answer: Quizdata3[currentQuest].answer,\n        pictures: Quizdata3[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  false;\n  loadQuiz4 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata4[currentQuest].question,\n        options: Quizdata4[currentQuest].options,\n        answer: Quizdata4[currentQuest].answer,\n        pictures: Quizdata4[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz5 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata5[currentQuest].question,\n        options: Quizdata5[currentQuest].options,\n        answer: Quizdata5[currentQuest].answer,\n        pictures: Quizdata5[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\");\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n    const rankVal = this.props.rankValue;\n\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie,\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master,\n      RankValue: rankVal\n    });\n\n    console.log(\"Sent to Database\");\n  };\n\n  pushtoDB2 = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n    const rankVal = this.props.rankValue;\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie, ///need to chnage the name of these as it overrides the value in the database\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master,\n      RankValue: rankVal\n    });\n\n    console.log(\"Sent to Database\");\n  };\n\n  // disableCheckLevel = () => {\n  //  this.setState({\n  //   levelDisable: false\n  //});\n  //};\n  nextQuestion = () => {\n    const { userAns } = this.state;\n    // e.preventDefault();\n    if (userAns === null) {\n      alert(\"choose an option\");\n      return;\n    }\n    this.setState({\n      currentQuest: this.state.currentQuest + 1\n    });\n\n    this.setState({\n      userAns: null\n    });\n  };\n\n  checkAns = userAns => {\n    const { answer, scores } = this.state;\n\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n    console.log(userAns);\n    if (userAns === answer) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: scores + 1\n      });\n    } else {\n      this.setState({\n        scores: scores\n      });\n      console.log(\"Wrong\");\n      //  alert(\"Correct answer is \" + answer);\n    }\n    console.log(\"score : \" + this.state.scores);\n  };\n\n  finishQuiz = () => {\n    if (this.state.currentQuest === Quizdata.length - 1) {\n      this.setState({\n        isEnd: true\n      });\n    }\n  };\n  loadQuizComponent = () => {\n    if (\n      this.state.currentQuest === Quizdata.length - 1 &&\n      this.state.scores < 5\n    ) {\n      this.setState({\n        isEnd: true\n      });\n    }\n  };\n\n  render() {\n    const { userAns, scores, options, currentQuest, isEnd } = this.state;\n    if (isEnd && scores >= 5) {\n      return (\n        <div>\n          <h3 className=\"SummaryResults\">\n            Quiz Finished, You passed {this.state.scores}/{Quizdata.length - 1}{\" \"}\n            <FaSmile />!\n          </h3>\n\n          <Button>next challenge</Button>\n        </div>\n      );\n    } else if (isEnd && scores < 5) {\n      return (\n        <div>\n          <h3 className=\"SummaryResults\">\n            Quiz Finished, You failed {this.state.scores}/{Quizdata.length - 1}{\" \"}\n            <FaSadTear />!\n          </h3>\n          <Test result={this.loadQuizComponent}>\n            <Button>try again</Button>\n          </Test>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"quizForm\">\n          <br></br>\n          {/*  <Welcome stateQuiz1={this.changeToquiz2} />*/}\n\n          <div>\n            <ProgressBar animated now={this.state.currentQuest * 10} />\n          </div>\n          {this.state.questions}\n          <br></br>\n          <p style={{ textAlign: \"center\" }}>Q{this.state.currentQuest}</p>\n          {this.state.pictures}\n          <br></br>\n\n          {options.map(option => (\n            <Button\n              size=\"lg\"\n              block\n              key={option.id}\n              className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n              onClick={() => this.checkAns(option)}\n            >\n              {option}\n            </Button>\n          ))}\n\n          <br></br>\n          <Button onClick={() => this.checkAns()}>\n            CHECK <FaHorse />\n          </Button>\n          {currentQuest < Quizdata.length - 1 && (\n            <Button\n              disabled={this.state.disabled}\n              onClick={() => {\n                this.nextQuestion();\n                this.pushtoDB();\n              }}\n            >\n              NEXT <FaArrowRight />\n            </Button>\n          )}\n          <br></br>\n\n          {currentQuest === Quizdata.length - 1 && (\n            <Button\n              onClick={() => {\n                this.finishQuiz();\n                this.pushtoDB2();\n                //  this.disableCheckLevel();\n                this.props.handleDisableValue(scores); // child to parent\n              }}\n            >\n              Finish\n            </Button>\n          )}\n        </div>\n      );\n    }\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}