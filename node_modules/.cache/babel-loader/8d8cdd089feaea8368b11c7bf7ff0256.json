{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LISSY\\\\Documents\\\\project\\\\src\\\\components\\\\quiz\\\\quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\"; //import pictures from \"../pictures/health_hazard.jpg\";\n\nimport { Button, ButtonGroup, Badge, ButtonToolbar, Spinner, Alert, Item, DropdownButton, Toast } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    };\n\n    this.nextQuestion = e => {\n      e.preventDefault();\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      });\n      console.log(this.state.currentQuest);\n    };\n\n    this.checkAnswer = e => {\n      //  e.preventDefault();\n      if (this.state.answers === this.state.currentAnswer) {\n        console.log(\"correct\");\n        this.setState({\n          scores: this.state.scores + 1\n        });\n      }\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      answers: \"\",\n      questions: \"\",\n      currentQuest: 0,\n      scores: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    }\n  }\n\n  render() {\n    const userAns = this.state;\n    return React.createElement(\"div\", {\n      className: \"lol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.questions, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), this.state.options.map(item => React.createElement(Toast, {\n      className: \"ui floating message option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, item)\n    /* maps the options on the page*/\n    ), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: userAns === this.state.option ? \"chosen\" : null,\n      onClick: this.checkAnswer(this.state.option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"CHECK\"), React.createElement(Button, {\n      onClick: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"NEXT\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), this.state.scores, this.state.currentQuest === Quizdata.length - 1 ? \"Quiz FINISHED\" : null);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/LISSY/Documents/project/src/components/quiz/quiz.js"],"names":["React","Component","Button","ButtonGroup","Badge","ButtonToolbar","Spinner","Alert","Item","DropdownButton","Toast","Questions","Quizdata","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","option","answers","answer","pictures","picture","nextQuestion","e","preventDefault","console","log","checkAnswer","currentAnswer","scores","userAns","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","item","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./quiz.css\";\r\n//import pictures from \"../pictures/health_hazard.jpg\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Badge,\r\n  ButtonToolbar,\r\n  Spinner,\r\n  Alert,\r\n  Item,\r\n  DropdownButton,\r\n  Toast\r\n} from \"react-bootstrap\";\r\nimport Questions, { Quizdata } from \"./questions\";\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userAns: null,\r\n      options: [],\r\n      answers: \"\",\r\n      questions: \"\",\r\n      currentQuest: 0,\r\n      scores: 0\r\n    };\r\n  }\r\n  loadQuiz = () => {\r\n    const { currentQuest } = this.state;\r\n    this.setState(() => {\r\n      return {\r\n        questions: Quizdata[currentQuest].question,\r\n        options: Quizdata[currentQuest].option,\r\n        answers: Quizdata[currentQuest].answer,\r\n        pictures: Quizdata[currentQuest].picture\r\n      };\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadQuiz();\r\n  }\r\n\r\n  nextQuestion = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      currentQuest: this.state.currentQuest + 1\r\n    });\r\n    console.log(this.state.currentQuest);\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { currentQuest } = this.state;\r\n    if (this.state.currentQuest !== prevState.currentQuest) {\r\n      this.setState(() => {\r\n        return {\r\n          questions: Quizdata[currentQuest].question,\r\n          options: Quizdata[currentQuest].option,\r\n          answers: Quizdata[currentQuest].answer,\r\n          pictures: Quizdata[currentQuest].picture\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  checkAnswer = e => {\r\n    //  e.preventDefault();\r\n    if (this.state.answers === this.state.currentAnswer) {\r\n      console.log(\"correct\");\r\n\r\n      this.setState({\r\n        scores: this.state.scores + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const userAns = this.state;\r\n    return (\r\n      <div className=\"lol\">\r\n        <br></br>\r\n        {this.state.questions}\r\n        <br></br>\r\n        {this.state.options.map(\r\n          item => (\r\n            <Toast className={\"ui floating message option\"}>{item}</Toast>\r\n          ) /* maps the options on the page*/\r\n        )}\r\n\r\n        {/*}\r\n        {\r\n          ( this.state.options.map((item, key) => (\r\n            <p className=\"bigbutton\" key={item.id}>\r\n              {item.options}\r\n            </p>\r\n            //console.log(items)\r\n          )))\r\n        }\r\n      */}\r\n        {/* \r\n        {this.state.options.map(option,key => (\r\n          <Button key={this.state.options.id} ></Button>\r\n        ))}\r\n       \r\n        {this.state.options} */}\r\n        <br></br>\r\n        <Button\r\n          className={userAns === this.state.option ? \"chosen\" : null}\r\n          onClick={this.checkAnswer(this.state.option)}\r\n        >\r\n          CHECK\r\n        </Button>\r\n        <Button onClick={this.nextQuestion}>NEXT</Button>\r\n        <br></br>\r\n        {this.state.scores}\r\n        {this.state.currentQuest === Quizdata.length - 1\r\n          ? \"Quiz FINISHED\"\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}