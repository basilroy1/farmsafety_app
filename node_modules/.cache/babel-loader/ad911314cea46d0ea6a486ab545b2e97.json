{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/home/userdisplayInfo.js\";\nimport fire from \"../../config/fire\";\nimport Welcome from \"../home/welcome\";\nimport React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nclass UserDisplayInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadData = () => {\n      const db = fire.database();\n      const ref = db.ref(\"data\");\n      console.log(\"loaded\");\n      let currentState = this.state.people;\n      ref.once(\"value\", snapshot => {\n        //callback start\n        snapshot.forEach(data => {\n          const currentStudent = data.val();\n          let user = {\n            UserAnswer: currentStudent.UserAnswer,\n            UserEmail: currentStudent.UserEmail,\n            ID: currentStudent.ID\n          };\n          currentState.push(user);\n        });\n        this.setState({\n          people: currentState,\n          dataHasLoaded: true\n        });\n      }); //callback end\n    };\n\n    this.state = {\n      people: [],\n      dataHasLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  render() {\n    let people = this.state.people;\n    let renderData = people.map(person => React.createElement(Welcome, {\n      UserAnswer: person.userAns,\n      UserEmail: person.email,\n      Question: person.questions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n    let loadingSpinner = React.createElement(Loader, {\n      id: \"loader\",\n      type: \"Plane\",\n      color: \"#570F0F \",\n      height: \"100\",\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.dataHasLoaded ? renderData : loadingSpinner);\n  }\n\n}\n\nexport default UserDisplayInfo;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/home/userdisplayInfo.js"],"names":["fire","Welcome","React","Component","Loader","UserDisplayInfo","constructor","props","loadData","db","database","ref","console","log","currentState","state","people","once","snapshot","forEach","data","currentStudent","val","user","UserAnswer","UserEmail","ID","push","setState","dataHasLoaded","componentDidMount","render","renderData","map","person","userAns","email","questions","loadingSpinner"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,MAAMC,eAAN,SAA8BF,SAA9B,CAAwC;AACtCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,QAZmB,GAYR,MAAM;AACf,YAAMC,EAAE,GAAGT,IAAI,CAACU,QAAL,EAAX;AACA,YAAMC,GAAG,GAAGF,EAAE,CAACE,GAAH,CAAO,MAAP,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWC,MAA9B;AACAL,MAAAA,GAAG,CAACM,IAAJ,CAAS,OAAT,EAAkBC,QAAQ,IAAI;AAC5B;AAEAA,QAAAA,QAAQ,CAACC,OAAT,CAAiBC,IAAI,IAAI;AACvB,gBAAMC,cAAc,GAAGD,IAAI,CAACE,GAAL,EAAvB;AACA,cAAIC,IAAI,GAAG;AACTC,YAAAA,UAAU,EAAEH,cAAc,CAACG,UADlB;AAETC,YAAAA,SAAS,EAAEJ,cAAc,CAACI,SAFjB;AAGTC,YAAAA,EAAE,EAAEL,cAAc,CAACK;AAHV,WAAX;AAKAZ,UAAAA,YAAY,CAACa,IAAb,CAAkBJ,IAAlB;AACD,SARD;AAUA,aAAKK,QAAL,CAAc;AACZZ,UAAAA,MAAM,EAAEF,YADI;AAEZe,UAAAA,aAAa,EAAE;AAFH,SAAd;AAID,OAjBD,EALe,CAsBX;AACL,KAnCkB;;AAEjB,SAAKd,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXa,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKtB,QAAL;AACD;;AA2BDuB,EAAAA,MAAM,GAAG;AACP,QAAIf,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,QAAIgB,UAAU,GAAGhB,MAAM,CAACiB,GAAP,CAAWC,MAAM,IAChC,oBAAC,OAAD;AACE,MAAA,UAAU,EAAEA,MAAM,CAACC,OADrB;AAEE,MAAA,SAAS,EAAED,MAAM,CAACE,KAFpB;AAGE,MAAA,QAAQ,EAAEF,MAAM,CAACG,SAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,CAAjB;AAOA,QAAIC,cAAc,GAChB,oBAAC,MAAD;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,UAHR;AAIE,MAAA,MAAM,EAAC,KAJT;AAKE,MAAA,KAAK,EAAC,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKvB,KAAL,CAAWc,aAAX,GAA2BG,UAA3B,GAAwCM,cAA9C,CAAP;AACD;;AAzDqC;;AA2DxC,eAAejC,eAAf","sourcesContent":["import fire from \"../../config/fire\";\nimport Welcome from \"../home/welcome\";\nimport React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\nclass UserDisplayInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      people: [],\n      dataHasLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = () => {\n    const db = fire.database();\n    const ref = db.ref(\"data\");\n    console.log(\"loaded\");\n    let currentState = this.state.people;\n    ref.once(\"value\", snapshot => {\n      //callback start\n\n      snapshot.forEach(data => {\n        const currentStudent = data.val();\n        let user = {\n          UserAnswer: currentStudent.UserAnswer,\n          UserEmail: currentStudent.UserEmail,\n          ID: currentStudent.ID\n        };\n        currentState.push(user);\n      });\n\n      this.setState({\n        people: currentState,\n        dataHasLoaded: true\n      });\n    }); //callback end\n  };\n\n  render() {\n    let people = this.state.people;\n    let renderData = people.map(person => (\n      <Welcome\n        UserAnswer={person.userAns}\n        UserEmail={person.email}\n        Question={person.questions}\n      />\n    ));\n    let loadingSpinner = (\n      <Loader\n        id=\"loader\"\n        type=\"Plane\"\n        color=\"#570F0F \"\n        height=\"100\"\n        width=\"100\"\n      />\n    );\n    return <div>{this.state.dataHasLoaded ? renderData : loadingSpinner}</div>;\n  }\n}\nexport default UserDisplayInfo;\n"]},"metadata":{},"sourceType":"module"}