{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaArrowRight, FaSadTear, FaSmile, FaCheckCircle, FaWindowClose } from \"react-icons/fa\";\nimport { MdClose } from \"react-icons/md\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz2 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Questions[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz3 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Questions[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz4 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Questions[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz5 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Questions[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\");\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4;\n      const master = this.props.userLevel5;\n      const rankVal = this.props.rankValue;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        UserName: fire.auth().currentUser.username,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master,\n        RankValue: rankVal,\n        LastLogin: this.props.time\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.nextQuestion = () => {\n      const _this$state = this.state,\n            scores = _this$state.scores,\n            answer = _this$state.answer,\n            userAns = _this$state.userAns;\n\n      if (userAns === null) {\n        alert(\"select an option\");\n        return;\n      }\n      /*  if (correct) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1\n        });\n      } else {\n        this.setState({ scores: scores });\n        console.log(\"Wrong\");\n      }\n      console.log(\"scores \" + this.state.scores);\n      */\n\n      /*if (correct) {\n        console.log(\"Correct\");\n         this.setState({\n          scores: scores + 1\n          // correct: false\n        });\n      } else {\n        this.setState({ scores: scores });\n        //  alert(\"Correct Answer is \" + answer);\n        //);\n      }\n      console.log(\"scores \" + this.state.scores);\n      */\n\n\n      if (this.state.currentQuest === this.state.limitedQuestion) {\n        this.setState({\n          currentQuest: this.state.currentQuest\n        });\n      } else {\n        this.setState({\n          currentQuest: this.state.currentQuest + 1,\n          scores: userAns === answer ? scores + 1 : scores\n        }, () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        });\n      }\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n      } else {\n        console.log(\"wrong\"); //  alert(\"Correct Answer is \" + answer);\n        //);\n      }\n    };\n\n    this.checkAns = answer => {\n      //userans and answer switched\n      this.setState({\n        userAns: answer,\n        disabled: false\n      }); //  alert(\"Correct answer is \" + answer);\n    };\n\n    this.percentageCalculation = () => {\n      var x = Math.round(this.state.limitedQuestion * 0.5);\n      return x;\n    };\n\n    this.finishQuiz = () => {\n      if (this.state.currentQuest === this.state.limitedQuestion - 1) {\n        if (this.state.userAns === this.state.answer) {\n          console.log(\"Correct\");\n        }\n\n        this.setState({\n          isEnd: true,\n          scores: this.state.userAns === this.state.answer ? this.state.scores + 1 : this.state.scores\n        }, () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        }); //      console.log(this.state);\n      } else {\n        console.log(\"didnt enter\");\n      }\n      /* setTimeout(() => {\n          this.setState({\n            isEnd: false\n          });\n        }, 3500);      \n        */\n\n\n      console.log(\"rank \" + this.props.rankValue);\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0,\n      isEnd: false,\n      people: [],\n      limitedQuestion: 3,\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.props.userLevel1) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel2) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel3) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel4) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel5) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userAns = _this$state2.userAns,\n          scores = _this$state2.scores,\n          options = _this$state2.options,\n          currentQuest = _this$state2.currentQuest,\n          isEnd = _this$state2.isEnd;\n\n    if (isEnd && scores >= this.percentageCalculation()) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResultsPass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"Quiz Finished, You passed \", this.state.scores, \"/\", this.state.limitedQuestion, \" \", React.createElement(FaSmile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), \"!\"), React.createElement(Button, {\n        id: \"nextChallenge\",\n        onClick: () => {\n          this.props.stateHiddenQuiz(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Next Challenge\"));\n    } else if (scores >= this.percentageCalculation() && this.props.quizFinished) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Farm Safety Guide Completed Successfully!!\", React.createElement(FaSmile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), \"!\"));\n    } else if (isEnd && scores < this.percentageCalculation()) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResultsFail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, \" \", \"Quiz Finished, You failed \", this.state.scores, \"/\", this.state.limitedQuestion, \" \", React.createElement(FaSadTear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }), \"!\")), React.createElement(Button, {\n        id: \"tryagain\",\n        onClick: () => {\n          this.props.tryAgain();\n          this.props.tryAgain2();\n          this.props.stateHiddenQuiz(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"Try Again\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"quizForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"leaveQuiz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => {\n          this.props.hideQuiznDisplay(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(MdClose, {\n        size: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        animated: true,\n        now: this.state.currentQuest * (100 / this.state.limitedQuestion),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      })), this.state.questions, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Q\", this.state.currentQuest + 1), this.state.pictures, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }), options.map((option, id) => React.createElement(Button, {\n        key: id,\n        size: \"lg\",\n        block: true,\n        className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n        onClick: () => {\n          this.checkAns(option);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, option, userAns === option && this.state.userAns === this.state.answer ? React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Correct \", React.createElement(FaCheckCircle, {\n        size: 36,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      })) : null, userAns === option && this.state.userAns !== this.state.answer ? React.createElement(Alert, {\n        style: {\n          fontSize: 30,\n          backgroundColor: \"rgb(255, 182, 182)\",\n          color: \"rgb(236, 19, 19)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, \"Wrong \", React.createElement(FaWindowClose, {\n        size: 36,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      })) : null)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }), currentQuest < this.state.limitedQuestion - 1 && React.createElement(Button, {\n        disabled: this.state.disabled,\n        onClick: () => {\n          this.nextQuestion();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, \"NEXT \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      }), currentQuest === this.state.limitedQuestion - 1 && React.createElement(Button, {\n        onClick: () => {\n          this.finishQuiz(); //this.props.stateHiddenQuiz(true);\n\n          this.props.handleDisableValue(scores, this.state.limitedQuestion); // child to parent\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaArrowRight","FaSadTear","FaSmile","FaCheckCircle","FaWindowClose","MdClose","Button","ProgressBar","Alert","Quizdata","Quizdata2","Quizdata3","Quizdata4","Quizdata5","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","answer","pictures","picture","console","log","loadQuiz2","loadQuiz3","loadQuiz4","loadQuiz5","logout","e","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","rookie","userLevel1","student","userLevel2","intermediate","userLevel3","expert","userLevel4","master","userLevel5","rankVal","rankValue","set","ID","currentUser","uid","UserEmail","email","UserName","username","Question","UserAnswer","userAns","Score","scores","UserLevel","UserLevelStudent","UserLevelIntermediate","UserLevelExpert","UserLevelMaster","RankValue","LastLogin","time","nextQuestion","alert","limitedQuestion","checkAns","disabled","percentageCalculation","x","Math","round","finishQuiz","isEnd","people","level1","level2","level3","level4","level5","componentDidMount","componentDidUpdate","prevProps","prevState","render","stateHiddenQuiz","quizFinished","tryAgain","tryAgain2","hideQuiznDisplay","textAlign","map","option","id","fontSize","backgroundColor","color","handleDisableValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport {\n  FaArrowRight,\n  FaSadTear,\n  FaSmile,\n  FaCheckCircle,\n  FaWindowClose\n} from \"react-icons/fa\";\nimport { MdClose } from \"react-icons/md\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0,\n      isEnd: false,\n      people: [],\n      limitedQuestion: 3,\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    };\n  }\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz2 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Questions[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata2[currentQuest].question,\n        options: Quizdata2[currentQuest].options,\n        answer: Quizdata2[currentQuest].answer,\n        pictures: Quizdata2[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz3 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Questions[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata3[currentQuest].question,\n        options: Quizdata3[currentQuest].options,\n        answer: Quizdata3[currentQuest].answer,\n        pictures: Quizdata3[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  loadQuiz4 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Questions[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata4[currentQuest].question,\n        options: Quizdata4[currentQuest].options,\n        answer: Quizdata4[currentQuest].answer,\n        pictures: Quizdata4[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz5 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Questions[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata5[currentQuest].question,\n        options: Quizdata5[currentQuest].options,\n        answer: Quizdata5[currentQuest].answer,\n        pictures: Quizdata5[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n\n    if (this.props.userLevel1) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel2) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel3) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel4) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel5) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        });\n      }\n    }\n  }\n\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\");\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n    const rankVal = this.props.rankValue;\n\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      UserName: fire.auth().currentUser.username,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie,\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master,\n      RankValue: rankVal,\n      LastLogin: this.props.time\n    });\n    console.log(\"Sent to Database\");\n  };\n\n  nextQuestion = () => {\n    const { scores, answer, userAns } = this.state;\n    if (userAns === null) {\n      alert(\"select an option\");\n      return;\n    }\n    /*  if (correct) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: scores + 1\n      });\n    } else {\n      this.setState({ scores: scores });\n      console.log(\"Wrong\");\n    }\n    console.log(\"scores \" + this.state.scores);\n*/\n\n    /*if (correct) {\n      console.log(\"Correct\");\n\n      this.setState({\n        scores: scores + 1\n        // correct: false\n      });\n    } else {\n      this.setState({ scores: scores });\n      //  alert(\"Correct Answer is \" + answer);\n      //);\n    }\n    console.log(\"scores \" + this.state.scores);\n    */\n    if (this.state.currentQuest === this.state.limitedQuestion) {\n      this.setState({\n        currentQuest: this.state.currentQuest\n      });\n    } else {\n      this.setState(\n        {\n          currentQuest: this.state.currentQuest + 1,\n          scores: userAns === answer ? scores + 1 : scores\n        },\n        () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        }\n      );\n    }\n    if (userAns === answer) {\n      console.log(\"Correct\");\n    } else {\n      console.log(\"wrong\");\n\n      //  alert(\"Correct Answer is \" + answer);\n      //);\n    }\n  };\n\n  checkAns = answer => {\n    //userans and answer switched\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n\n    //  alert(\"Correct answer is \" + answer);\n  };\n\n  percentageCalculation = () => {\n    var x = Math.round(this.state.limitedQuestion * 0.5);\n    return x;\n  };\n  finishQuiz = () => {\n    if (this.state.currentQuest === this.state.limitedQuestion - 1) {\n      if (this.state.userAns === this.state.answer) {\n        console.log(\"Correct\");\n      }\n      this.setState(\n        {\n          isEnd: true,\n          scores:\n            this.state.userAns === this.state.answer\n              ? this.state.scores + 1\n              : this.state.scores\n        },\n        () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        }\n      );\n      //      console.log(this.state);\n    } else {\n      console.log(\"didnt enter\");\n    }\n    /* setTimeout(() => {\n        this.setState({\n          isEnd: false\n        });\n      }, 3500);      \n      */\n    console.log(\"rank \" + this.props.rankValue);\n  };\n\n  render() {\n    const { userAns, scores, options, currentQuest, isEnd } = this.state;\n    if (isEnd && scores >= this.percentageCalculation()) {\n      return (\n        <div>\n          <h3 className=\"SummaryResultsPass\">\n            Quiz Finished, You passed {this.state.scores}/\n            {this.state.limitedQuestion} <FaSmile />!\n          </h3>\n\n          <Button\n            id=\"nextChallenge\"\n            onClick={() => {\n              this.props.stateHiddenQuiz(true);\n            }}\n          >\n            Next Challenge\n          </Button>\n        </div>\n      );\n    } else if (\n      scores >= this.percentageCalculation() &&\n      this.props.quizFinished\n    ) {\n      return (\n        <div>\n          <h3 className=\"\">\n            Farm Safety Guide Completed Successfully!!\n            <FaSmile />!\n          </h3>\n        </div>\n      );\n    } else if (isEnd && scores < this.percentageCalculation()) {\n      return (\n        <div>\n          <h3 className=\"SummaryResultsFail\">\n            <Alert color=\"danger\">\n              {\" \"}\n              Quiz Finished, You failed {this.state.scores}/\n              {this.state.limitedQuestion} <FaSadTear />!\n            </Alert>\n          </h3>\n          <Button\n            id=\"tryagain\"\n            onClick={() => {\n              this.props.tryAgain();\n              this.props.tryAgain2();\n              this.props.stateHiddenQuiz(true);\n            }}\n          >\n            Try Again\n          </Button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"quizForm\">\n          <div id=\"leaveQuiz\">\n            <Button\n              variant=\"danger\"\n              onClick={() => {\n                this.props.hideQuiznDisplay(false);\n              }}\n            >\n              <MdClose size={40} />\n            </Button>\n          </div>\n          <br />\n          <br />\n          <div>\n            <ProgressBar\n              animated\n              now={this.state.currentQuest * (100 / this.state.limitedQuestion)}\n            />\n          </div>\n          {this.state.questions}\n          <br></br>\n          <p style={{ textAlign: \"center\" }}>Q{this.state.currentQuest + 1}</p>\n          {this.state.pictures}\n          <br></br>\n          {options.map((option, id) => (\n            <Button\n              key={id}\n              size=\"lg\"\n              block\n              className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n              onClick={() => {\n                this.checkAns(option);\n              }}\n            >\n              {option}\n              {userAns === option &&\n              this.state.userAns === this.state.answer ? (\n                <Alert color=\"success\">\n                  Correct <FaCheckCircle size={36} />\n                </Alert>\n              ) : null}\n              {userAns === option &&\n              this.state.userAns !== this.state.answer ? (\n                <Alert\n                  style={{\n                    fontSize: 30,\n                    backgroundColor: \"rgb(255, 182, 182)\",\n                    color: \"rgb(236, 19, 19)\"\n                  }}\n                >\n                  Wrong <FaWindowClose size={36} />\n                </Alert>\n              ) : null}\n            </Button>\n          ))}\n\n          <br></br>\n          {currentQuest < this.state.limitedQuestion - 1 && (\n            <Button\n              disabled={this.state.disabled}\n              onClick={() => {\n                this.nextQuestion();\n              }}\n            >\n              NEXT <FaArrowRight />\n            </Button>\n          )}\n          <br></br>\n          {currentQuest === this.state.limitedQuestion - 1 && (\n            <Button\n              onClick={() => {\n                this.finishQuiz();\n                //this.props.stateHiddenQuiz(true);\n                this.props.handleDisableValue(\n                  scores,\n                  this.state.limitedQuestion\n                ); // child to parent\n              }}\n            >\n              Finish\n            </Button>\n          )}\n        </div>\n      );\n    }\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}