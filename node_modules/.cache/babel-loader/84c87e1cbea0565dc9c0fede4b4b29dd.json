{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\"; //import pictures from \"../pictures/health_hazard.jpg\";\n\nimport { Button, ButtonGroup, Badge, ButtonToolbar, Spinner, Alert, Item, DropdownButton, Toast } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    };\n\n    this.nextQuestion = e => {\n      e.preventDefault();\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      });\n      console.log(this.state.currentQuest);\n    };\n\n    this.checkAnswer = answer => {\n      //  e.preventDefault();\n      this.setState({\n        userAns: answer\n      });\n\n      if (this.state.answers === this.state.currentAnswer) {\n        console.log(\"correct\");\n        this.setState({\n          scores: this.state.scores + 1\n        });\n      }\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      answers: \"\",\n      questions: \"\",\n      currentQuest: 0,\n      scores: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    }\n  }\n\n  render() {\n    const userAns = this.state;\n    return React.createElement(\"div\", {\n      className: \"lol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), this.state.questions, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), this.state.options.map(item => React.createElement(Toast, {\n      id: \"optionsData\",\n      className: userAns === this.state.options ? \"selected\" : null,\n      onClick: this.checkAnswer(this.state.options),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, item)\n    /* maps the options on the page*/\n    ), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.checkAnswer(this.state.option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"CHECK\"), React.createElement(Button, {\n      onClick: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"NEXT\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), this.state.scores, this.state.currentQuest === Quizdata.length - 1 ? alert(\"Quiz FINISHED\") : null);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","Button","ButtonGroup","Badge","ButtonToolbar","Spinner","Alert","Item","DropdownButton","Toast","Questions","Quizdata","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","option","answers","answer","pictures","picture","nextQuestion","e","preventDefault","console","log","checkAnswer","userAns","currentAnswer","scores","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","item","length","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\n//import pictures from \"../pictures/health_hazard.jpg\";\nimport {\n  Button,\n  ButtonGroup,\n  Badge,\n  ButtonToolbar,\n  Spinner,\n  Alert,\n  Item,\n  DropdownButton,\n  Toast\n} from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      answers: \"\",\n      questions: \"\",\n      currentQuest: 0,\n      scores: 0\n    };\n  }\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].option,\n        answers: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n  };\n\n  componentDidMount() {\n    this.loadQuiz();\n  }\n\n  nextQuestion = e => {\n    e.preventDefault();\n    this.setState({\n      currentQuest: this.state.currentQuest + 1\n    });\n    console.log(this.state.currentQuest);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    }\n  }\n\n  checkAnswer = answer => {\n    //  e.preventDefault();\n\n    this.setState({\n      userAns: answer\n    });\n    if (this.state.answers === this.state.currentAnswer) {\n      console.log(\"correct\");\n      this.setState({\n        scores: this.state.scores + 1\n      });\n    }\n  };\n\n  render() {\n    const userAns = this.state;\n\n    return (\n      <div className=\"lol\">\n        <br></br>\n        {this.state.questions}\n        <br></br>\n        {this.state.options.map(\n          item => (\n            <Toast\n              id=\"optionsData\"\n              className={userAns === this.state.options ? \"selected\" : null}\n              onClick={this.checkAnswer(this.state.options)}\n            >\n              {item}\n            </Toast>\n          ) /* maps the options on the page*/\n        )}\n\n        <br></br>\n        <Button onClick={this.checkAnswer(this.state.option)}>CHECK</Button>\n\n        <Button onClick={this.nextQuestion}>NEXT</Button>\n        <br></br>\n        {this.state.scores}\n        {this.state.currentQuest === Quizdata.length - 1\n          ? alert(\"Quiz FINISHED\")\n          : null}\n      </div>\n    );\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}