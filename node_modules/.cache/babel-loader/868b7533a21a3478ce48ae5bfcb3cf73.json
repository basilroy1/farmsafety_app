{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight, FaSadTear, FaSmile } from \"react-icons/fa\"; //import { MdClose } from \"react-icons/md\";\n\nimport { Button, ProgressBar } from \"react-bootstrap\"; //import { Alert } from \"reactstrap\";\n\nimport { Questions } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz2 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz3 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz4 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz5 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\");\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4;\n      const master = this.props.userLevel5;\n      const rankVal = this.props.rankValue;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master,\n        RankValue: rankVal\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.nextQuestion = () => {\n      const _this$state = this.state,\n            scores = _this$state.scores,\n            answer = _this$state.answer,\n            userAns = _this$state.userAns;\n\n      if (userAns === null) {\n        return;\n      }\n      /*  if (correct) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1\n        });\n      } else {\n        this.setState({ scores: scores });\n        console.log(\"Wrong\");\n      }\n      console.log(\"scores \" + this.state.scores);\n      */\n\n      /*if (correct) {\n        console.log(\"Correct\");\n         this.setState({\n          scores: scores + 1\n          // correct: false\n        });\n      } else {\n        this.setState({ scores: scores });\n        //  alert(\"Correct Answer is \" + answer);\n        //);\n      }\n      console.log(\"scores \" + this.state.scores);\n      */\n\n\n      this.setState({\n        currentQuest: this.state.currentQuest + 1,\n        scores: userAns === answer ? scores + 1 : scores\n      }, () => {\n        this.pushtoDB();\n        console.log(\"scores \" + this.state.scores);\n      });\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n      } else {\n        console.log(\"wrong\"); //  alert(\"Correct Answer is \" + answer);\n        //);\n      }\n    };\n\n    this.checkAns = answer => {\n      //userans and answer switched\n      this.setState({\n        userAns: answer,\n        disabled: false\n      });\n      /*  if (userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: userAns === answer ? scores + 1 : scores\n        });\n      } else {\n        this.setState({\n          correct: false\n        });\n      }\n      */\n      //  alert(\"Correct answer is \" + answer);\n    };\n\n    this.finishQuiz = () => {\n      if (this.state.currentQuest === Quizdata.length - 1) {\n        if (this.state.userAns === this.state.answer) {\n          console.log(\"Correct\");\n        }\n\n        this.setState({\n          isEnd: true,\n          scores: this.state.userAns === this.state.answer ? this.state.scores + 1 : this.state.scores\n        }, () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        }); //      console.log(this.state);\n      } else {\n        console.log(\"didnt enter\");\n      }\n      /* if (this.state.correct) {\n        // last question score updation here as cant be done in nextquestion function due to out of bounds\n        console.log(\"Correct on finish\");\n        console.log(\"scores before update \" + this.state.scores);\n        this.setState({\n          scores: this.state.scores + 1\n        });\n      } else {\n        this.setState({ scores: scores });\n        console.log(\"Wrong\");\n      }\n      console.log(\"scores after updation \" + this.state.scores);\n       // this.props.DBdata();\n      //console.log(\"Sent to Database from on finish\");\n      /* setTimeout(() => {\n          this.setState({\n            isEnd: false\n          });\n        }, 3500);\n        */\n\n\n      console.log(\"rank \" + this.props.rankValue);\n    };\n\n    this.loadNextChallenge = () => {\n      if (this.props.rankValue === 1) {\n        this.setState({\n          article2: true\n        });\n      } else if (this.props.rankValue === 2) {\n        this.setState({\n          article3: true\n        });\n      }\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0,\n      isEnd: false,\n      people: [],\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false,\n      correct: true\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.props.userLevel1) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel2) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel3) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel4) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel5) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userAns = _this$state2.userAns,\n          scores = _this$state2.scores,\n          options = _this$state2.options,\n          currentQuest = _this$state2.currentQuest,\n          isEnd = _this$state2.isEnd;\n\n    if (isEnd && scores >= 5) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResultsPass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Quiz Finished, You passed \", this.state.scores, \"/\", Quizdata.length, \" \", React.createElement(FaSmile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }), \"!\"), React.createElement(Button, {\n        id: \"nextChallenge\",\n        onClick: this.loadNextChallenge,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"next challenge\"));\n    } else if (scores >= 5 && this.props.quizFinished) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"Farm Safety Guide Completed Successfully!!\", React.createElement(FaSmile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      }), \"!\"));\n    } else if (isEnd && scores < 5) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResultsFail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, \"Quiz Finished, You failed \", this.state.scores, \"/\", Quizdata.length, \" \", React.createElement(FaSadTear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), \"!\"), React.createElement(Button, {\n        id: \"tryagain\",\n        onClick: () => {\n          //  this.pushtoDB();\n          this.props.tryAgain();\n          this.props.tryAgain2();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Try Again\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"quizForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        animated: true,\n        now: this.state.currentQuest * 11.99,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      })), this.state.questions, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"Q\", this.state.currentQuest + 1), this.state.pictures, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393\n        },\n        __self: this\n      }), options.map((option, id) => React.createElement(Button, {\n        size: \"lg\",\n        block: true,\n        key: id,\n        className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n        onClick: () => this.checkAns(option),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, option)), React.createElement(\"div\", {\n        className: \"hrLine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410\n        },\n        __self: this\n      }), currentQuest < Quizdata.length - 1 && React.createElement(Button, {\n        disabled: this.state.disabled,\n        onClick: () => {\n          this.nextQuestion();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"NEXT \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), currentQuest === Quizdata.length - 1 && React.createElement(Button, {\n        onClick: () => {\n          this.finishQuiz();\n          this.props.handleDisableValue(scores); // child to parent\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaHorse","FaArrowRight","FaSadTear","FaSmile","Button","ProgressBar","Questions","Quizdata2","Quizdata3","Quizdata4","Quizdata5","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","Quizdata","question","options","answer","pictures","picture","console","log","loadQuiz2","loadQuiz3","loadQuiz4","loadQuiz5","logout","e","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","rookie","userLevel1","student","userLevel2","intermediate","userLevel3","expert","userLevel4","master","userLevel5","rankVal","rankValue","set","ID","currentUser","uid","UserEmail","email","Question","UserAnswer","userAns","Score","scores","UserLevel","UserLevelStudent","UserLevelIntermediate","UserLevelExpert","UserLevelMaster","RankValue","nextQuestion","checkAns","disabled","finishQuiz","length","isEnd","loadNextChallenge","article2","article3","people","level1","level2","level3","level4","level5","correct","componentDidMount","componentDidUpdate","prevProps","prevState","render","quizFinished","tryAgain","tryAgain2","textAlign","map","option","id","handleDisableValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,SAAhC,EAA2CC,OAA3C,QAA0D,gBAA1D,C,CACA;;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,iBAApC,C,CACA;;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AACA,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAC3Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoBnBC,QApBmB,GAoBR,MAAM;AAAA,YACPC,YADO,GACU,KAAKC,KADf,CACPD,YADO,EAEf;;AACA,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AACLC,UAAAA,SAAS,EAAEC,QAAQ,CAACJ,YAAD,CAAR,CAAuBK,QAD7B;AAELC,UAAAA,OAAO,EAAEF,QAAQ,CAACJ,YAAD,CAAR,CAAuBM,OAF3B;AAGLC,UAAAA,MAAM,EAAEH,QAAQ,CAACJ,YAAD,CAAR,CAAuBO,MAH1B;AAILC,UAAAA,QAAQ,EAAEJ,QAAQ,CAACJ,YAAD,CAAR,CAAuBS;AAJ5B,SAAP;AAMD,OAPD;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWM,MAAvB;AACD,KAhCkB;;AAAA,SAiCnBK,SAjCmB,GAiCP,MAAM;AAAA,YACRZ,YADQ,GACS,KAAKC,KADd,CACRD,YADQ,EAEhB;;AACA,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AACLC,UAAAA,SAAS,EAAEX,SAAS,CAACQ,YAAD,CAAT,CAAwBK,QAD9B;AAELC,UAAAA,OAAO,EAAEd,SAAS,CAACQ,YAAD,CAAT,CAAwBM,OAF5B;AAGLC,UAAAA,MAAM,EAAEf,SAAS,CAACQ,YAAD,CAAT,CAAwBO,MAH3B;AAILC,UAAAA,QAAQ,EAAEhB,SAAS,CAACQ,YAAD,CAAT,CAAwBS;AAJ7B,SAAP;AAMD,OAPD;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWM,MAAvB;AACD,KA7CkB;;AAAA,SA8CnBM,SA9CmB,GA8CP,MAAM;AAAA,YACRb,YADQ,GACS,KAAKC,KADd,CACRD,YADQ,EAEhB;;AACA,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AACLC,UAAAA,SAAS,EAAEV,SAAS,CAACO,YAAD,CAAT,CAAwBK,QAD9B;AAELC,UAAAA,OAAO,EAAEb,SAAS,CAACO,YAAD,CAAT,CAAwBM,OAF5B;AAGLC,UAAAA,MAAM,EAAEd,SAAS,CAACO,YAAD,CAAT,CAAwBO,MAH3B;AAILC,UAAAA,QAAQ,EAAEf,SAAS,CAACO,YAAD,CAAT,CAAwBS;AAJ7B,SAAP;AAMD,OAPD;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWM,MAAvB;AACD,KA1DkB;;AAAA,SA4DnBO,SA5DmB,GA4DP,MAAM;AAAA,YACRd,YADQ,GACS,KAAKC,KADd,CACRD,YADQ,EAEhB;;AACA,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AACLC,UAAAA,SAAS,EAAET,SAAS,CAACM,YAAD,CAAT,CAAwBK,QAD9B;AAELC,UAAAA,OAAO,EAAEZ,SAAS,CAACM,YAAD,CAAT,CAAwBM,OAF5B;AAGLC,UAAAA,MAAM,EAAEb,SAAS,CAACM,YAAD,CAAT,CAAwBO,MAH3B;AAILC,UAAAA,QAAQ,EAAEd,SAAS,CAACM,YAAD,CAAT,CAAwBS;AAJ7B,SAAP;AAMD,OAPD;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWM,MAAvB;AACD,KAxEkB;;AAAA,SAyEnBQ,SAzEmB,GAyEP,MAAM;AAAA,YACRf,YADQ,GACS,KAAKC,KADd,CACRD,YADQ,EAEhB;;AACA,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AACLC,UAAAA,SAAS,EAAER,SAAS,CAACK,YAAD,CAAT,CAAwBK,QAD9B;AAELC,UAAAA,OAAO,EAAEX,SAAS,CAACK,YAAD,CAAT,CAAwBM,OAF5B;AAGLC,UAAAA,MAAM,EAAEZ,SAAS,CAACK,YAAD,CAAT,CAAwBO,MAH3B;AAILC,UAAAA,QAAQ,EAAEb,SAAS,CAACK,YAAD,CAAT,CAAwBS;AAJ7B,SAAP;AAMD,OAPD;AAQAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWM,MAAvB;AACD,KArFkB;;AAAA,SAoKnBS,MApKmB,GAoKVC,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAlC,MAAAA,IAAI,CAACmC,IAAL,GAAYC,OAAZ;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAxKkB;;AAAA,SA0KnBU,QA1KmB,GA0KR,MAAM;AACf,UAAIC,GAAG,GAAGtC,IAAI,CAACuC,QAAL,GAAgBD,GAAhB,CAAoB,MAApB,CAAV;AACA,UAAIE,MAAM,GAAGF,GAAG,CAACG,IAAJ,EAAb;AACA,YAAMC,MAAM,GAAG,KAAK5B,KAAL,CAAW6B,UAA1B;AACA,YAAMC,OAAO,GAAG,KAAK9B,KAAL,CAAW+B,UAA3B;AACA,YAAMC,YAAY,GAAG,KAAKhC,KAAL,CAAWiC,UAAhC;AACA,YAAMC,MAAM,GAAG,KAAKlC,KAAL,CAAWmC,UAA1B;AACA,YAAMC,MAAM,GAAG,KAAKpC,KAAL,CAAWqC,UAA1B;AACA,YAAMC,OAAO,GAAG,KAAKtC,KAAL,CAAWuC,SAA3B;AAEAb,MAAAA,MAAM,CAACc,GAAP,CAAW;AACTC,QAAAA,EAAE,EAAEvD,IAAI,CAACmC,IAAL,GAAYqB,WAAZ,CAAwBC,GADnB;AAETC,QAAAA,SAAS,EAAE1D,IAAI,CAACmC,IAAL,GAAYqB,WAAZ,CAAwBG,KAF1B;AAGTC,QAAAA,QAAQ,EAAE,KAAK3C,KAAL,CAAWE,SAHZ;AAGuB;AAChC0C,QAAAA,UAAU,EAAE,KAAK5C,KAAL,CAAW6C,OAJd;AAKTC,QAAAA,KAAK,EAAE,KAAK9C,KAAL,CAAW+C,MALT;AAMTC,QAAAA,SAAS,EAAEvB,MANF;AAOTwB,QAAAA,gBAAgB,EAAEtB,OAPT;AAQTuB,QAAAA,qBAAqB,EAAErB,YARd;AASTsB,QAAAA,eAAe,EAAEpB,MATR;AAUTqB,QAAAA,eAAe,EAAEnB,MAVR;AAWToB,QAAAA,SAAS,EAAElB;AAXF,OAAX;AAaA1B,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,KAlMkB;;AAAA,SAoMnB4C,YApMmB,GAoMJ,MAAM;AAAA,0BACiB,KAAKtD,KADtB;AAAA,YACX+C,MADW,eACXA,MADW;AAAA,YACHzC,MADG,eACHA,MADG;AAAA,YACKuC,OADL,eACKA,OADL;;AAEnB,UAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB;AACD;AACD;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;AAcA,WAAK5C,QAAL,CACE;AACEF,QAAAA,YAAY,EAAE,KAAKC,KAAL,CAAWD,YAAX,GAA0B,CAD1C;AAEEgD,QAAAA,MAAM,EAAEF,OAAO,KAAKvC,MAAZ,GAAqByC,MAAM,GAAG,CAA9B,GAAkCA;AAF5C,OADF,EAKE,MAAM;AACJ,aAAK3B,QAAL;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKV,KAAL,CAAW+C,MAAnC;AACD,OARH;;AAUA,UAAIF,OAAO,KAAKvC,MAAhB,EAAwB;AACtBG,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADK,CAGL;AACA;AACD;AACF,KArPkB;;AAAA,SAuPnB6C,QAvPmB,GAuPRjD,MAAM,IAAI;AACnB;AACA,WAAKL,QAAL,CAAc;AACZ4C,QAAAA,OAAO,EAAEvC,MADG;AAEZkD,QAAAA,QAAQ,EAAE;AAFE,OAAd;AAIA;;;;;;;;;;;AAWA;AACD,KAzQkB;;AAAA,SA2QnBC,UA3QmB,GA2QN,MAAM;AACjB,UAAI,KAAKzD,KAAL,CAAWD,YAAX,KAA4BI,QAAQ,CAACuD,MAAT,GAAkB,CAAlD,EAAqD;AACnD,YAAI,KAAK1D,KAAL,CAAW6C,OAAX,KAAuB,KAAK7C,KAAL,CAAWM,MAAtC,EAA8C;AAC5CG,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACD,aAAKT,QAAL,CACE;AACE0D,UAAAA,KAAK,EAAE,IADT;AAEEZ,UAAAA,MAAM,EACJ,KAAK/C,KAAL,CAAW6C,OAAX,KAAuB,KAAK7C,KAAL,CAAWM,MAAlC,GACI,KAAKN,KAAL,CAAW+C,MAAX,GAAoB,CADxB,GAEI,KAAK/C,KAAL,CAAW+C;AALnB,SADF,EAQE,MAAM;AACJ,eAAK3B,QAAL;AACAX,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,KAAKV,KAAL,CAAW+C,MAAnC;AACD,SAXH,EAJmD,CAiBnD;AACD,OAlBD,MAkBO;AACLtC,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACD;;;;;;;;;;;;;;;;;;;;;;AAqBAD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAU,KAAKb,KAAL,CAAWuC,SAAjC;AACD,KAvTkB;;AAAA,SAyTnBwB,iBAzTmB,GAyTC,MAAM;AACxB,UAAI,KAAK/D,KAAL,CAAWuC,SAAX,KAAyB,CAA7B,EAAgC;AAC9B,aAAKnC,QAAL,CAAc;AACZ4D,UAAAA,QAAQ,EAAE;AADE,SAAd;AAGD,OAJD,MAIO,IAAI,KAAKhE,KAAL,CAAWuC,SAAX,KAAyB,CAA7B,EAAgC;AACrC,aAAKnC,QAAL,CAAc;AACZ6D,UAAAA,QAAQ,EAAE;AADE,SAAd;AAGD;AACF,KAnUkB;;AAEjB,SAAK9D,KAAL,GAAa;AACX6C,MAAAA,OAAO,EAAE,IADE;AAEXxC,MAAAA,OAAO,EAAE,EAFE;AAGXmD,MAAAA,QAAQ,EAAE,KAHC;AAIXzD,MAAAA,YAAY,EAAE,CAJH;AAKX4D,MAAAA,KAAK,EAAE,KALI;AAMXI,MAAAA,MAAM,EAAE,EANG;AAQXhB,MAAAA,MAAM,EAAE,CARG;AASXxC,MAAAA,QAAQ,EAAE,EATC;AAUXyD,MAAAA,MAAM,EAAE,KAVG;AAWXC,MAAAA,MAAM,EAAE,KAXG;AAYXC,MAAAA,MAAM,EAAE,KAZG;AAaXC,MAAAA,MAAM,EAAE,KAbG;AAcXC,MAAAA,MAAM,EAAE,KAdG;AAeXC,MAAAA,OAAO,EAAE;AAfE,KAAb;AAiBD;;AAoEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKzE,KAAL,CAAW6B,UAAf,EAA2B;AACzB,WAAK5B,QAAL;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAFyB,CAEI;AAC9B,KAHD,MAGO,IAAI,KAAKb,KAAL,CAAW+B,UAAf,EAA2B;AAChC,WAAKjB,SAAL,GADgC,CACd;;AAClBF,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAHM,MAGA,IAAI,KAAKb,KAAL,CAAWiC,UAAf,EAA2B;AAChC,WAAKlB,SAAL,GADgC,CACd;;AAClBH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAHM,MAGA,IAAI,KAAKb,KAAL,CAAWmC,UAAf,EAA2B;AAChC,WAAKnB,SAAL,GADgC,CACd;;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAHM,MAGA,IAAI,KAAKb,KAAL,CAAWqC,UAAf,EAA2B;AAChC,WAAKpB,SAAL,GADgC,CACd;;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAHM,MAGA;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF;;AAED6D,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAAA,UAC/B1E,YAD+B,GACd,KAAKC,KADS,CAC/BD,YAD+B;;AAGvC,QAAI,KAAKF,KAAL,CAAW6B,UAAf,EAA2B;AACzB,UAAI,KAAK1B,KAAL,CAAWD,YAAX,KAA4B0E,SAAS,CAAC1E,YAA1C,EAAwD;AACtD,aAAKE,QAAL,CAAc;AACZuD,UAAAA,QAAQ,EAAE,IADE;AAEZtD,UAAAA,SAAS,EAAEC,QAAQ,CAACJ,YAAD,CAAR,CAAuBK,QAFtB;AAGZC,UAAAA,OAAO,EAAEF,QAAQ,CAACJ,YAAD,CAAR,CAAuBM,OAHpB;AAIZC,UAAAA,MAAM,EAAEH,QAAQ,CAACJ,YAAD,CAAR,CAAuBO,MAJnB;AAKZC,UAAAA,QAAQ,EAAEJ,QAAQ,CAACJ,YAAD,CAAR,CAAuBS;AALrB,SAAd;AAOD;AACF,KAVD,MAUO,IAAI,KAAKX,KAAL,CAAW+B,UAAf,EAA2B;AAChC,UAAI,KAAK5B,KAAL,CAAWD,YAAX,KAA4B0E,SAAS,CAAC1E,YAA1C,EAAwD;AACtD,aAAKE,QAAL,CAAc;AACZuD,UAAAA,QAAQ,EAAE,IADE;AAEZtD,UAAAA,SAAS,EAAEX,SAAS,CAACQ,YAAD,CAAT,CAAwBK,QAFvB;AAGZC,UAAAA,OAAO,EAAEd,SAAS,CAACQ,YAAD,CAAT,CAAwBM,OAHrB;AAIZC,UAAAA,MAAM,EAAEf,SAAS,CAACQ,YAAD,CAAT,CAAwBO,MAJpB;AAKZC,UAAAA,QAAQ,EAAEhB,SAAS,CAACQ,YAAD,CAAT,CAAwBS;AALtB,SAAd;AAOD;AACF,KAVM,MAUA,IAAI,KAAKX,KAAL,CAAWiC,UAAf,EAA2B;AAChC,UAAI,KAAK9B,KAAL,CAAWD,YAAX,KAA4B0E,SAAS,CAAC1E,YAA1C,EAAwD;AACtD,aAAKE,QAAL,CAAc;AACZuD,UAAAA,QAAQ,EAAE,IADE;AAEZtD,UAAAA,SAAS,EAAEV,SAAS,CAACO,YAAD,CAAT,CAAwBK,QAFvB;AAGZC,UAAAA,OAAO,EAAEb,SAAS,CAACO,YAAD,CAAT,CAAwBM,OAHrB;AAIZC,UAAAA,MAAM,EAAEd,SAAS,CAACO,YAAD,CAAT,CAAwBO,MAJpB;AAKZC,UAAAA,QAAQ,EAAEf,SAAS,CAACO,YAAD,CAAT,CAAwBS;AALtB,SAAd;AAOD;AACF,KAVM,MAUA,IAAI,KAAKX,KAAL,CAAWmC,UAAf,EAA2B;AAChC,UAAI,KAAKhC,KAAL,CAAWD,YAAX,KAA4B0E,SAAS,CAAC1E,YAA1C,EAAwD;AACtD,aAAKE,QAAL,CAAc;AACZuD,UAAAA,QAAQ,EAAE,IADE;AAEZtD,UAAAA,SAAS,EAAET,SAAS,CAACM,YAAD,CAAT,CAAwBK,QAFvB;AAGZC,UAAAA,OAAO,EAAEZ,SAAS,CAACM,YAAD,CAAT,CAAwBM,OAHrB;AAIZC,UAAAA,MAAM,EAAEb,SAAS,CAACM,YAAD,CAAT,CAAwBO,MAJpB;AAKZC,UAAAA,QAAQ,EAAEd,SAAS,CAACM,YAAD,CAAT,CAAwBS;AALtB,SAAd;AAOD;AACF,KAVM,MAUA,IAAI,KAAKX,KAAL,CAAWqC,UAAf,EAA2B;AAChC,UAAI,KAAKlC,KAAL,CAAWD,YAAX,KAA4B0E,SAAS,CAAC1E,YAA1C,EAAwD;AACtD,aAAKE,QAAL,CAAc;AACZuD,UAAAA,QAAQ,EAAE,IADE;AAEZtD,UAAAA,SAAS,EAAER,SAAS,CAACK,YAAD,CAAT,CAAwBK,QAFvB;AAGZC,UAAAA,OAAO,EAAEX,SAAS,CAACK,YAAD,CAAT,CAAwBM,OAHrB;AAIZC,UAAAA,MAAM,EAAEZ,SAAS,CAACK,YAAD,CAAT,CAAwBO,MAJpB;AAKZC,UAAAA,QAAQ,EAAEb,SAAS,CAACK,YAAD,CAAT,CAAwBS;AALtB,SAAd;AAOD;AACF;AACF;;AAmKDkE,EAAAA,MAAM,GAAG;AAAA,yBACmD,KAAK1E,KADxD;AAAA,UACC6C,OADD,gBACCA,OADD;AAAA,UACUE,MADV,gBACUA,MADV;AAAA,UACkB1C,OADlB,gBACkBA,OADlB;AAAA,UAC2BN,YAD3B,gBAC2BA,YAD3B;AAAA,UACyC4D,KADzC,gBACyCA,KADzC;;AAEP,QAAIA,KAAK,IAAIZ,MAAM,IAAI,CAAvB,EAA0B;AACxB,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAC6B,KAAK/C,KAAL,CAAW+C,MADxC,OACiD5C,QAAQ,CAACuD,MAD1D,EACkE,GADlE,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,MADF,EAME,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,eAAX;AAA2B,QAAA,OAAO,EAAE,KAAKE,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,CADF;AAYD,KAbD,MAaO,IAAIb,MAAM,IAAI,CAAV,IAAe,KAAKlD,KAAL,CAAW8E,YAA9B,EAA4C;AACjD,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,MADF,CADF;AAQD,KATM,MASA,IAAIhB,KAAK,IAAIZ,MAAM,GAAG,CAAtB,EAAyB;AAC9B,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAC6B,KAAK/C,KAAL,CAAW+C,MADxC,OACiD5C,QAAQ,CAACuD,MAD1D,EACkE,GADlE,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,MADF,EAKE,oBAAC,MAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,OAAO,EAAE,MAAM;AACb;AACA,eAAK7D,KAAL,CAAW+E,QAAX;AACA,eAAK/E,KAAL,CAAWgF,SAAX;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF;AAkBD,KAnBM,MAmBA;AACL,aACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,QAAQ,MAArB;AAAsB,QAAA,GAAG,EAAE,KAAK7E,KAAL,CAAWD,YAAX,GAA0B,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAKG,KAAKC,KAAL,CAAWE,SALd,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE;AAAG,QAAA,KAAK,EAAE;AAAE4E,UAAAA,SAAS,EAAE;AAAb,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqC,KAAK9E,KAAL,CAAWD,YAAX,GAA0B,CAA/D,CAPF,EAQG,KAAKC,KAAL,CAAWO,QARd,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAWGF,OAAO,CAAC0E,GAAR,CAAY,CAACC,MAAD,EAASC,EAAT,KACX,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,GAAG,EAAEA,EAHP;AAIE,QAAA,SAAS,qDACTpC,OAAO,KAAKmC,MAAZ,GAAqB,UAArB,GAAkC,IADzB,kBAJX;AAOE,QAAA,OAAO,EAAE,MAAM,KAAKzB,QAAL,CAAcyB,MAAd,CAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASGA,MATH,CADD,CAXH,EAyBE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA1BF,EA4BGjF,YAAY,GAAGI,QAAQ,CAACuD,MAAT,GAAkB,CAAjC,IACC,oBAAC,MAAD;AACE,QAAA,QAAQ,EAAE,KAAK1D,KAAL,CAAWwD,QADvB;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKF,YAAL;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANP,CA7BJ,EAsCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtCF,EAwCGvD,YAAY,KAAKI,QAAQ,CAACuD,MAAT,GAAkB,CAAnC,IACC,oBAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKD,UAAL;AACA,eAAK5D,KAAL,CAAWqF,kBAAX,CAA8BnC,MAA9B,EAFa,CAE0B;AACxC,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAzCJ,CADF;AAqDD;AACF;;AAxa0B;;AA0a7B,eAAepD,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight, FaSadTear, FaSmile } from \"react-icons/fa\";\n//import { MdClose } from \"react-icons/md\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\n//import { Alert } from \"reactstrap\";\nimport { Questions } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0,\n      isEnd: false,\n      people: [],\n\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false,\n      correct: true\n    };\n  }\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz2 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata2[currentQuest].question,\n        options: Quizdata2[currentQuest].options,\n        answer: Quizdata2[currentQuest].answer,\n        pictures: Quizdata2[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz3 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata3[currentQuest].question,\n        options: Quizdata3[currentQuest].options,\n        answer: Quizdata3[currentQuest].answer,\n        pictures: Quizdata3[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  loadQuiz4 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata4[currentQuest].question,\n        options: Quizdata4[currentQuest].options,\n        answer: Quizdata4[currentQuest].answer,\n        pictures: Quizdata4[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz5 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata5[currentQuest].question,\n        options: Quizdata5[currentQuest].options,\n        answer: Quizdata5[currentQuest].answer,\n        pictures: Quizdata5[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n\n    if (this.props.userLevel1) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel2) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel3) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel4) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel5) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        });\n      }\n    }\n  }\n\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\");\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n    const rankVal = this.props.rankValue;\n\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie,\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master,\n      RankValue: rankVal\n    });\n    console.log(\"Sent to Database\");\n  };\n\n  nextQuestion = () => {\n    const { scores, answer, userAns } = this.state;\n    if (userAns === null) {\n      return;\n    }\n    /*  if (correct) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: scores + 1\n      });\n    } else {\n      this.setState({ scores: scores });\n      console.log(\"Wrong\");\n    }\n    console.log(\"scores \" + this.state.scores);\n*/\n\n    /*if (correct) {\n      console.log(\"Correct\");\n\n      this.setState({\n        scores: scores + 1\n        // correct: false\n      });\n    } else {\n      this.setState({ scores: scores });\n      //  alert(\"Correct Answer is \" + answer);\n      //);\n    }\n    console.log(\"scores \" + this.state.scores);\n    */\n    this.setState(\n      {\n        currentQuest: this.state.currentQuest + 1,\n        scores: userAns === answer ? scores + 1 : scores\n      },\n      () => {\n        this.pushtoDB();\n        console.log(\"scores \" + this.state.scores);\n      }\n    );\n    if (userAns === answer) {\n      console.log(\"Correct\");\n    } else {\n      console.log(\"wrong\");\n\n      //  alert(\"Correct Answer is \" + answer);\n      //);\n    }\n  };\n\n  checkAns = answer => {\n    //userans and answer switched\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n    /*  if (userAns === answer) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: userAns === answer ? scores + 1 : scores\n      });\n    } else {\n      this.setState({\n        correct: false\n      });\n    }\n*/\n    //  alert(\"Correct answer is \" + answer);\n  };\n\n  finishQuiz = () => {\n    if (this.state.currentQuest === Quizdata.length - 1) {\n      if (this.state.userAns === this.state.answer) {\n        console.log(\"Correct\");\n      }\n      this.setState(\n        {\n          isEnd: true,\n          scores:\n            this.state.userAns === this.state.answer\n              ? this.state.scores + 1\n              : this.state.scores\n        },\n        () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        }\n      );\n      //      console.log(this.state);\n    } else {\n      console.log(\"didnt enter\");\n    }\n    /* if (this.state.correct) {\n      // last question score updation here as cant be done in nextquestion function due to out of bounds\n      console.log(\"Correct on finish\");\n      console.log(\"scores before update \" + this.state.scores);\n      this.setState({\n        scores: this.state.scores + 1\n      });\n    } else {\n      this.setState({ scores: scores });\n      console.log(\"Wrong\");\n    }\n    console.log(\"scores after updation \" + this.state.scores);\n\n    // this.props.DBdata();\n    //console.log(\"Sent to Database from on finish\");\n    /* setTimeout(() => {\n        this.setState({\n          isEnd: false\n        });\n      }, 3500);\n      */\n    console.log(\"rank \" + this.props.rankValue);\n  };\n\n  loadNextChallenge = () => {\n    if (this.props.rankValue === 1) {\n      this.setState({\n        article2: true\n      });\n    } else if (this.props.rankValue === 2) {\n      this.setState({\n        article3: true\n      });\n    }\n  };\n\n  render() {\n    const { userAns, scores, options, currentQuest, isEnd } = this.state;\n    if (isEnd && scores >= 5) {\n      return (\n        <div>\n          <h3 className=\"SummaryResultsPass\">\n            Quiz Finished, You passed {this.state.scores}/{Quizdata.length}{\" \"}\n            <FaSmile />!\n          </h3>\n\n          <Button id=\"nextChallenge\" onClick={this.loadNextChallenge}>\n            next challenge\n          </Button>\n        </div>\n      );\n    } else if (scores >= 5 && this.props.quizFinished) {\n      return (\n        <div>\n          <h3 className=\"\">\n            Farm Safety Guide Completed Successfully!!\n            <FaSmile />!\n          </h3>\n        </div>\n      );\n    } else if (isEnd && scores < 5) {\n      return (\n        <div>\n          <h3 className=\"SummaryResultsFail\">\n            Quiz Finished, You failed {this.state.scores}/{Quizdata.length}{\" \"}\n            <FaSadTear />!\n          </h3>\n          <Button\n            id=\"tryagain\"\n            onClick={() => {\n              //  this.pushtoDB();\n              this.props.tryAgain();\n              this.props.tryAgain2();\n            }}\n          >\n            Try Again\n          </Button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"quizForm\">\n          <br></br>\n          <div>\n            <ProgressBar animated now={this.state.currentQuest * 11.99} />\n          </div>\n          {this.state.questions}\n          <br></br>\n          <p style={{ textAlign: \"center\" }}>Q{this.state.currentQuest + 1}</p>\n          {this.state.pictures}\n          <br></br>\n\n          {options.map((option, id) => (\n            <Button\n              size=\"lg\"\n              block\n              key={id}\n              className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n              onClick={() => this.checkAns(option)}\n            >\n              {option}\n            </Button>\n          ))}\n\n          <div className=\"hrLine\"></div>\n          <br></br>\n\n          {currentQuest < Quizdata.length - 1 && (\n            <Button\n              disabled={this.state.disabled}\n              onClick={() => {\n                this.nextQuestion();\n              }}\n            >\n              NEXT <FaArrowRight />\n            </Button>\n          )}\n          <br></br>\n\n          {currentQuest === Quizdata.length - 1 && (\n            <Button\n              onClick={() => {\n                this.finishQuiz();\n                this.props.handleDisableValue(scores); // child to parent\n              }}\n            >\n              Finish\n            </Button>\n          )}\n        </div>\n      );\n    }\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}