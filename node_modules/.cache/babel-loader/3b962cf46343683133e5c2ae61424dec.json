{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaArrowRight, FaSadTear, FaSmile, FaLightbulb, FaCheckCircle, FaThumbsDown, FaThumbsUp, FaWindowClose, FaTractor } from \"react-icons/fa\";\nimport { MdClose, MdTimer } from \"react-icons/md\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport { Divider } from \"@material-ui/core\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      //   if (Quizdata.length <= 0) return;\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          ///loads the quiz quesions for rookie level\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz2 = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata2[currentQuest].question,\n          ///loads the quiz quesions for student level\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz3 = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          ///loads the quiz quesions for intermediate level\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz4 = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          ///loads the quiz quesions for expert level\n          pictures: Quizdata4[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz5 = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          ///loads the quiz quesions for master level\n          pictures: Quizdata5[currentQuest].picture\n        };\n      });\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\"); //logout function\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4; //function to push the all the necessary data to the database\n\n      const master = this.props.userLevel5;\n      const rankVal = this.props.rankValue;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master,\n        RankValue: rankVal,\n        LastLogin: this.props.time\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.nextQuestion = () => {\n      const _this$state = this.state,\n            scores = _this$state.scores,\n            answer = _this$state.answer,\n            userAns = _this$state.userAns;\n\n      if (userAns === null) {\n        //this function baiscally increments the counter for the next question for the quiz and does the score updation if answer is correct. Pushed the data to DB also\n        alert(\"select an option\");\n        return;\n      }\n\n      if (this.state.currentQuest === this.state.limitedQuestion) {\n        this.setState({\n          currentQuest: this.state.currentQuest //checks for the limted quiz length for faster quizes,flexibility of App\n\n        });\n      } else {\n        this.setState({\n          currentQuest: this.state.currentQuest + 1,\n          scores: userAns === answer ? scores + 1 : scores\n        }, () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        });\n      }\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n      } else {\n        console.log(\"wrong\");\n      }\n    };\n\n    this.checkAns = answer => {\n      this.setState({\n        userAns: answer,\n        //Assign the user selected answer which is used for checking if answer is correct.\n        disabled: false\n      });\n    };\n\n    this.percentageCalculation = () => {\n      var x = Math.round(this.state.limitedQuestion * 0.5); //calcaulates the number of questions answered correctly to achieve 50%\n\n      return x;\n    };\n\n    this.finishQuiz = () => {\n      if (this.state.currentQuest === this.state.limitedQuestion - 1) {\n        if (this.state.userAns === this.state.answer) {\n          console.log(\"Correct\");\n        }\n\n        this.setState({\n          isEnd: true,\n          //on the last question in the quiz it does a seperate check for the answer due to out of bounds exception\n          scores: this.state.userAns === this.state.answer ? this.state.scores + 1 : this.state.scores\n        }, () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        });\n      } else {\n        console.log(\"didnt enter\");\n      }\n\n      console.log(\"rank \" + this.props.rankValue);\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0,\n      //Intialize state variables\n      isEnd: false,\n      people: [],\n      limitedQuestion: 4,\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //if user level is roookie then loads quiz 1 data\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //if user level is student then loads quiz 2 data\n\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //if user level is intermediate then loads quiz3  data\n\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); // if user level is expert then loads quiz4  data\n\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //if user level is master then loads quiz 5 data\n\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.props.userLevel1) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          //we check if the questions are the same as the previuos questions for each level\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel2) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture //we check if the questions are the same as the previuos questions for each level\n\n        });\n      }\n    } else if (this.props.userLevel3) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        }); //we check if the questions are the same as the previuos questions for each level\n      }\n    } else if (this.props.userLevel4) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          //we check if the questions are the same as the previuos questions for each level\n          pictures: Quizdata4[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel5) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata5[currentQuest].question,\n          //we check if the questions are the same as the previuos questions for each level\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        });\n      }\n    }\n  }\n\n  render() {\n    var incorrect = this.state.limitedQuestion - this.state.scores;\n    const _this$state2 = this.state,\n          userAns = _this$state2.userAns,\n          scores = _this$state2.scores,\n          options = _this$state2.options,\n          currentQuest = _this$state2.currentQuest,\n          isEnd = _this$state2.isEnd;\n\n    if (scores >= this.percentageCalculation() && this.props.quizFinished && isEnd //if the user has completed the whole quiz level a message will be brought up saying  congratulations.\n    ) {\n        return React.createElement(\"div\", {\n          className: \"QuizCompleted\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(Alert, {\n          style: {\n            textAlign: \"center\"\n          },\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, \" \", \"Quiz Finished\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }, \"Results\")), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304\n          },\n          __self: this\n        }, \"Incorrect No. of Questions : \", incorrect), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305\n          },\n          __self: this\n        }, \"No. of Questions Attempted : \", this.state.limitedQuestion), React.createElement(\"p\", {\n          className: \"results\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, \"Final Score :\"), \" \", this.state.scores, \"/\", this.state.limitedQuestion, \" \", React.createElement(FaSmile, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }), \"!\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          },\n          __self: this\n        }), \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }, \" You Passed \"), \" \", React.createElement(FaThumbsUp, {\n          color: \"black\",\n          size: 23,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }), React.createElement(FaTractor, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }), \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          },\n          __self: this\n        }, \" \", \"Congratulations on Completing the Farm Safety Guide!!\", React.createElement(FaTractor, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }))), React.createElement(\"p\", {\n          className: \"Tips\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320\n          },\n          __self: this\n        }), React.createElement(\"strong\", {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          },\n          __self: this\n        }), \"Tips\", React.createElement(FaLightbulb, {\n          color: \"yellow\",\n          size: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        })), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, \"You have mastered the safety Guide but it does not mean you know\", \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, \"all possible safety/dangers\"), \".\")), React.createElement(Button, {\n          id: \"nextChallenge\",\n          variant: \"success\",\n          onClick: () => {\n            this.props.stateHiddenQuiz(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, \"Go Back To Home\"));\n      } else if (isEnd && scores >= this.percentageCalculation()) {\n      return (//if the user has passed the quiz a message shows the stats for that quiz and some tips to keep in mind.\n        React.createElement(\"div\", {\n          className: \"SummaryResultsPass\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, React.createElement(Alert, {\n          style: {\n            textAlign: \"center\"\n          },\n          color: \"success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, \" \", \"Quiz Finished\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }), React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, \"Results\")), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, \"Incorrect No. of Questions : \", incorrect), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, \"No. of Questions Attempted : \", this.state.limitedQuestion), React.createElement(\"p\", {\n          className: \"results\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }, \"Final Score :\"), \" \", this.state.scores, \"/\", this.state.limitedQuestion, \" \", React.createElement(FaSmile, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }), \"!\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364\n          },\n          __self: this\n        }), \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        }, \" You Passed \"), \" \", React.createElement(FaThumbsUp, {\n          color: \"black\",\n          size: 23,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          className: \"Tips\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }), React.createElement(\"strong\", {\n          style: {\n            fontSize: 20\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 372\n          },\n          __self: this\n        }), \"Tips\", React.createElement(FaLightbulb, {\n          color: \"yellow\",\n          size: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        })), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377\n          },\n          __self: this\n        }, \"Read over the Article paying particular for the next Challenges\", \" \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          },\n          __self: this\n        }, \"Attention to the Key Terms and Pictures\"), \".\"), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          },\n          __self: this\n        }, \"Take Your time there are no \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, \"Time Limits\"), React.createElement(MdTimer, {\n          size: 20,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }), \".\")), React.createElement(Button, {\n          id: \"nextChallenge\",\n          variant: \"success\",\n          onClick: () => {\n            this.props.stateHiddenQuiz(true);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }, \"Next Challenge\"))\n      );\n    } else if (isEnd && scores < this.percentageCalculation()) {\n      // if user fails the quiz a message will pop up saying to re-try the quiz.\n      return React.createElement(\"div\", {\n        className: \"SummaryResultsFail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        style: {\n          textAlign: \"center\"\n        },\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \" \", \"Quiz Finished\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"Results\")), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Incorrect No. of Questions : \", incorrect), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"No. of Questions Attempted : \", this.state.limitedQuestion), React.createElement(\"p\", {\n        className: \"results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, \"Final Score :\"), \" \", this.state.scores, \"/\", this.state.limitedQuestion, \" \", React.createElement(FaSadTear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }), \"!\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }), \" \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \" You Failed \"), \" \", React.createElement(FaThumbsDown, {\n        color: \"red\",\n        size: 23,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"Tips\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), \"Tips\", React.createElement(FaLightbulb, {\n        color: \"yellow\",\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, \"Read over the Article again paying particular\", \" \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Attention to the Key Terms and Pictures\"), \".\"), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, \"Take Your time while reading the Questions as there are no\", \" \", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"Time Limits\"), React.createElement(MdTimer, {\n        size: 20,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437\n        },\n        __self: this\n      }), \".\")), React.createElement(Button, {\n        id: \"tryagain\",\n        variant: \"warning\",\n        onClick: () => {\n          this.props.stateHiddenQuiz(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, \"Try Again\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"quizForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"leaveQuiz\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"danger\" //display of quiz is done here\n        ,\n        onClick: () => {\n          this.props.hideQuiznDisplay(false);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, React.createElement(MdClose, {\n        size: 40,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        animated: true,\n        now: this.state.currentQuest * (100 / this.state.limitedQuestion + 1) //progress bar shows the progress\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      })), this.state.questions, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, \"Q\", this.state.currentQuest + 1), this.state.pictures, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }), options.map((option, id) => React.createElement(Button, {\n        key: id,\n        size: \"lg\"\n        /*displays the set of options*/\n        ,\n        block: true,\n        className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n        onClick: () => {\n          this.checkAns(option);\n          /*checks selected user answer and passes it to the checkAns function above*/\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, option, userAns === option && this.state.userAns === this.state.answer ? React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, \"Correct \", React.createElement(FaCheckCircle, {\n        size: 36,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      })) : null, userAns === option && this.state.userAns !== this.state.answer ? React.createElement(Alert, {\n        style: {\n          fontSize: 30,\n          backgroundColor: \"rgb(255, 182, 182)\",\n          color: \"rgb(236, 19, 19)\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, \"Wrong \", React.createElement(FaWindowClose, {\n        size: 36,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      })) : null)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }), currentQuest < this.state.limitedQuestion - 1 && React.createElement(Button, {\n        disabled: this.state.disabled //button for next Question\n        ,\n        onClick: () => {\n          this.nextQuestion();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }, \"NEXT \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527\n        },\n        __self: this\n      }), currentQuest === this.state.limitedQuestion - 1 && React.createElement(Button, {\n        onClick: () => {\n          this.finishQuiz(); //button for Finish quiz is displayed once the last Question has been reached.\n\n          this.props.handleDisableValue(scores, this.state.limitedQuestion); // child to parent\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529\n        },\n        __self: this\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaArrowRight","FaSadTear","FaSmile","FaLightbulb","FaCheckCircle","FaThumbsDown","FaThumbsUp","FaWindowClose","FaTractor","MdClose","MdTimer","Button","ProgressBar","Alert","Quizdata","Quizdata2","Quizdata3","Quizdata4","Quizdata5","Divider","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","answer","pictures","picture","console","log","loadQuiz2","loadQuiz3","loadQuiz4","loadQuiz5","logout","e","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","rookie","userLevel1","student","userLevel2","intermediate","userLevel3","expert","userLevel4","master","userLevel5","rankVal","rankValue","set","ID","currentUser","uid","UserEmail","email","Question","UserAnswer","userAns","Score","scores","UserLevel","UserLevelStudent","UserLevelIntermediate","UserLevelExpert","UserLevelMaster","RankValue","LastLogin","time","nextQuestion","alert","limitedQuestion","checkAns","disabled","percentageCalculation","x","Math","round","finishQuiz","isEnd","people","level1","level2","level3","level4","level5","componentDidMount","componentDidUpdate","prevProps","prevState","render","incorrect","quizFinished","textAlign","fontSize","stateHiddenQuiz","hideQuiznDisplay","map","option","id","backgroundColor","color","handleDisableValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport {\n  FaArrowRight,\n  FaSadTear,\n  FaSmile,\n  FaLightbulb,\n  FaCheckCircle,\n  FaThumbsDown,\n  FaThumbsUp,\n  FaWindowClose,\n  FaTractor\n} from \"react-icons/fa\";\nimport { MdClose, MdTimer } from \"react-icons/md\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport { Divider } from \"@material-ui/core\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0, //Intialize state variables\n      isEnd: false,\n      people: [],\n      limitedQuestion: 4,\n      scores: 0,\n      pictures: \"\",\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false\n    };\n  }\n  loadQuiz = () => {\n    //   if (Quizdata.length <= 0) return;\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question, ///loads the quiz quesions for rookie level\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz2 = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata2[currentQuest].question, ///loads the quiz quesions for student level\n        options: Quizdata2[currentQuest].options,\n        answer: Quizdata2[currentQuest].answer,\n        pictures: Quizdata2[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz3 = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata3[currentQuest].question,\n        options: Quizdata3[currentQuest].options, ///loads the quiz quesions for intermediate level\n        answer: Quizdata3[currentQuest].answer,\n        pictures: Quizdata3[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  loadQuiz4 = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata4[currentQuest].question,\n        options: Quizdata4[currentQuest].options,\n        answer: Quizdata4[currentQuest].answer, ///loads the quiz quesions for expert level\n        pictures: Quizdata4[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz5 = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata5[currentQuest].question,\n        options: Quizdata5[currentQuest].options,\n        answer: Quizdata5[currentQuest].answer, ///loads the quiz quesions for master level\n        pictures: Quizdata5[currentQuest].picture\n      };\n    });\n  };\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //if user level is roookie then loads quiz 1 data\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //if user level is student then loads quiz 2 data\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //if user level is intermediate then loads quiz3  data\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); // if user level is expert then loads quiz4  data\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //if user level is master then loads quiz 5 data\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n\n    if (this.props.userLevel1) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options, //we check if the questions are the same as the previuos questions for each level\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel2) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture //we check if the questions are the same as the previuos questions for each level\n        });\n      }\n    } else if (this.props.userLevel3) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        }); //we check if the questions are the same as the previuos questions for each level\n      }\n    } else if (this.props.userLevel4) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer, //we check if the questions are the same as the previuos questions for each level\n          pictures: Quizdata4[currentQuest].picture\n        });\n      }\n    } else if (this.props.userLevel5) {\n      if (this.state.currentQuest !== prevState.currentQuest) {\n        this.setState({\n          disabled: true,\n          questions: Quizdata5[currentQuest].question, //we check if the questions are the same as the previuos questions for each level\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        });\n      }\n    }\n  }\n\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\"); //logout function\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4; //function to push the all the necessary data to the database\n    const master = this.props.userLevel5;\n    const rankVal = this.props.rankValue;\n\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie,\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master,\n      RankValue: rankVal,\n      LastLogin: this.props.time\n    });\n    console.log(\"Sent to Database\");\n  };\n\n  nextQuestion = () => {\n    const { scores, answer, userAns } = this.state;\n    if (userAns === null) {\n      //this function baiscally increments the counter for the next question for the quiz and does the score updation if answer is correct. Pushed the data to DB also\n      alert(\"select an option\");\n      return;\n    }\n\n    if (this.state.currentQuest === this.state.limitedQuestion) {\n      this.setState({\n        currentQuest: this.state.currentQuest //checks for the limted quiz length for faster quizes,flexibility of App\n      });\n    } else {\n      this.setState(\n        {\n          currentQuest: this.state.currentQuest + 1,\n          scores: userAns === answer ? scores + 1 : scores\n        },\n        () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        }\n      );\n    }\n    if (userAns === answer) {\n      console.log(\"Correct\");\n    } else {\n      console.log(\"wrong\");\n    }\n  };\n\n  checkAns = answer => {\n    this.setState({\n      userAns: answer, //Assign the user selected answer which is used for checking if answer is correct.\n      disabled: false\n    });\n  };\n\n  percentageCalculation = () => {\n    var x = Math.round(this.state.limitedQuestion * 0.5); //calcaulates the number of questions answered correctly to achieve 50%\n    return x;\n  };\n  finishQuiz = () => {\n    if (this.state.currentQuest === this.state.limitedQuestion - 1) {\n      if (this.state.userAns === this.state.answer) {\n        console.log(\"Correct\");\n      }\n      this.setState(\n        {\n          isEnd: true, //on the last question in the quiz it does a seperate check for the answer due to out of bounds exception\n          scores:\n            this.state.userAns === this.state.answer\n              ? this.state.scores + 1\n              : this.state.scores\n        },\n        () => {\n          this.pushtoDB();\n          console.log(\"scores \" + this.state.scores);\n        }\n      );\n    } else {\n      console.log(\"didnt enter\");\n    }\n    console.log(\"rank \" + this.props.rankValue);\n  };\n\n  render() {\n    var incorrect = this.state.limitedQuestion - this.state.scores;\n    const { userAns, scores, options, currentQuest, isEnd } = this.state;\n    if (\n      scores >= this.percentageCalculation() &&\n      this.props.quizFinished &&\n      isEnd //if the user has completed the whole quiz level a message will be brought up saying  congratulations.\n    ) {\n      return (\n        <div className=\"QuizCompleted\">\n          <h3>\n            <Alert style={{ textAlign: \"center\" }} color=\"success\">\n              {\" \"}\n              Quiz Finished\n            </Alert>\n          </h3>\n          <br />\n          <h1>\n            <strong>Results</strong>\n          </h1>\n          <Divider />\n          <br />\n          <p>Incorrect No. of Questions : {incorrect}</p>\n          <p>No. of Questions Attempted : {this.state.limitedQuestion}</p>\n          <p className=\"results\">\n            <strong>Final Score :</strong> {this.state.scores}/\n            {this.state.limitedQuestion} <FaSmile />!<br />{\" \"}\n            <strong> You Passed </strong> <FaThumbsUp color=\"black\" size={23} />\n            <br />\n            <FaTractor />{\" \"}\n            <strong>\n              {\" \"}\n              Congratulations on Completing the Farm Safety Guide!!\n              <FaTractor />\n            </strong>\n          </p>\n\n          <p className=\"Tips\">\n            <br />\n            <strong style={{ fontSize: 20 }}>\n              <br />\n              <Divider />\n              Tips\n              <FaLightbulb color=\"yellow\" size={20} />\n            </strong>\n\n            <li>\n              You have mastered the safety Guide but it does not mean you know{\" \"}\n              <strong>all possible safety/dangers</strong>.\n            </li>\n          </p>\n          <Button\n            id=\"nextChallenge\"\n            variant=\"success\"\n            onClick={() => {\n              this.props.stateHiddenQuiz(true);\n            }}\n          >\n            Go Back To Home\n          </Button>\n        </div>\n      );\n    } else if (isEnd && scores >= this.percentageCalculation()) {\n      return (\n        //if the user has passed the quiz a message shows the stats for that quiz and some tips to keep in mind.\n        <div className=\"SummaryResultsPass\">\n          <h3>\n            <Alert style={{ textAlign: \"center\" }} color=\"success\">\n              {\" \"}\n              Quiz Finished\n            </Alert>\n          </h3>\n          <br />\n          <h1>\n            <strong>Results</strong>\n          </h1>\n          <Divider />\n          <br />\n          <p>Incorrect No. of Questions : {incorrect}</p>\n          <p>No. of Questions Attempted : {this.state.limitedQuestion}</p>\n          <p className=\"results\">\n            <strong>Final Score :</strong> {this.state.scores}/\n            {this.state.limitedQuestion} <FaSmile />!<br />{\" \"}\n            <strong> You Passed </strong> <FaThumbsUp color=\"black\" size={23} />\n          </p>\n\n          <p className=\"Tips\">\n            <br />\n            <strong style={{ fontSize: 20 }}>\n              <br />\n              <Divider />\n              Tips\n              <FaLightbulb color=\"yellow\" size={20} />\n            </strong>\n\n            <li>\n              Read over the Article paying particular for the next Challenges{\" \"}\n              <strong>Attention to the Key Terms and Pictures</strong>.\n            </li>\n            <li>\n              Take Your time there are no <strong>Time Limits</strong>\n              <MdTimer size={20} />.\n            </li>\n          </p>\n          <Button\n            id=\"nextChallenge\"\n            variant=\"success\"\n            onClick={() => {\n              this.props.stateHiddenQuiz(true);\n            }}\n          >\n            Next Challenge\n          </Button>\n        </div>\n      );\n    } else if (isEnd && scores < this.percentageCalculation()) {\n      // if user fails the quiz a message will pop up saying to re-try the quiz.\n      return (\n        <div className=\"SummaryResultsFail\">\n          <h3>\n            <Alert style={{ textAlign: \"center\" }} color=\"danger\">\n              {\" \"}\n              Quiz Finished\n            </Alert>\n          </h3>\n          <br />\n          <h1>\n            <strong>Results</strong>\n          </h1>\n          <Divider />\n          <br />\n          <p>Incorrect No. of Questions : {incorrect}</p>\n          <p>No. of Questions Attempted : {this.state.limitedQuestion}</p>\n          <p className=\"results\">\n            <strong>Final Score :</strong> {this.state.scores}/\n            {this.state.limitedQuestion} <FaSadTear />!<br />{\" \"}\n            <strong> You Failed </strong> <FaThumbsDown color=\"red\" size={23} />\n          </p>\n\n          <p className=\"Tips\">\n            <br />\n            <strong style={{ fontSize: 20 }}>\n              <br />\n              <Divider />\n              Tips\n              <FaLightbulb color=\"yellow\" size={20} />\n            </strong>\n\n            <li>\n              Read over the Article again paying particular{\" \"}\n              <strong>Attention to the Key Terms and Pictures</strong>.\n            </li>\n            <li>\n              Take Your time while reading the Questions as there are no{\" \"}\n              <strong>Time Limits</strong>\n              <MdTimer size={20} />.\n            </li>\n          </p>\n          <Button\n            id=\"tryagain\"\n            variant=\"warning\"\n            onClick={() => {\n              this.props.stateHiddenQuiz(true);\n            }}\n          >\n            Try Again\n          </Button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"quizForm\">\n          <div id=\"leaveQuiz\">\n            <Button\n              variant=\"danger\" //display of quiz is done here\n              onClick={() => {\n                this.props.hideQuiznDisplay(false);\n              }}\n            >\n              <MdClose size={40} />\n            </Button>\n          </div>\n          <br />\n          <br />\n          <div>\n            <ProgressBar\n              animated\n              now={\n                this.state.currentQuest * (100 / this.state.limitedQuestion + 1)\n              } //progress bar shows the progress\n            />\n          </div>\n          {this.state.questions} {/*displays the set of questions*/}\n          <br></br>\n          <p style={{ textAlign: \"center\" }}>Q{this.state.currentQuest + 1}</p>\n          {this.state.pictures}\n          {/*displays the set of pictures*/}\n          <br></br>\n          {options.map((option, id) => (\n            <Button\n              key={id}\n              size=\"lg\" /*displays the set of options*/\n              block\n              className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n              onClick={() => {\n                this.checkAns(\n                  option\n                ); /*checks selected user answer and passes it to the checkAns function above*/\n              }}\n            >\n              {option}\n              {userAns === option &&\n              this.state.userAns === this.state.answer ? (\n                <Alert color=\"success\">\n                  {/*we do a realtime check of the selected answer to indacte the user if the answer is correct or wrong*/}\n                  Correct <FaCheckCircle size={36} />\n                </Alert>\n              ) : null}\n              {userAns === option &&\n              this.state.userAns !== this.state.answer ? (\n                <Alert\n                  style={{\n                    fontSize: 30,\n                    backgroundColor: \"rgb(255, 182, 182)\",\n                    color: \"rgb(236, 19, 19)\"\n                  }}\n                >\n                  Wrong <FaWindowClose size={36} />\n                </Alert>\n              ) : null}\n            </Button>\n          ))}\n          <br></br>\n          {currentQuest < this.state.limitedQuestion - 1 && (\n            <Button\n              disabled={this.state.disabled} //button for next Question\n              onClick={() => {\n                this.nextQuestion();\n              }}\n            >\n              NEXT <FaArrowRight />\n            </Button>\n          )}\n          <br></br>\n          {currentQuest === this.state.limitedQuestion - 1 && (\n            <Button\n              onClick={() => {\n                this.finishQuiz(); //button for Finish quiz is displayed once the last Question has been reached.\n                this.props.handleDisableValue(\n                  scores,\n                  this.state.limitedQuestion\n                ); // child to parent\n              }}\n            >\n              Finish\n            </Button>\n          )}\n        </div>\n      );\n    }\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}