{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/login.js\";\nimport React, { Component } from \"react\";\nimport fire from \"../../config/fire\";\nimport { Button } from \"react-bootstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./login.css\";\nimport { GiFarmTractor } from \"react-icons/gi\";\nimport { MdMail, MdDone, MdPriorityHigh } from \"react-icons/md\";\nimport { FaUserCircle, FaArrowCircleLeft } from \"react-icons/fa\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport TextField from \"@material-ui/core/TextField\"; //imported all the neccessary libraries,API's,Components\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Welcome from \"../home/welcome\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      const target = e.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value; //this function looks out for an change in value then triggers\n\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.login = e => {\n      fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password) //function for authenticating the login with email and password\n      .then(u => {\n        this.setState({\n          viewWelcome: true,\n          viewLogin: false\n        });\n        console.log(\"Logged in\");\n      }).catch(error => {\n        alert(\"Please enter a Valid Email Address or Password\");\n        console.log(error.message);\n      });\n    };\n\n    this.passwordReset = e => {\n      //  e.preventDefault();\n      const validEmail = this.state.emailReset.endsWith(\"@mumail.ie\") || this.state.emailReset.endsWith(\"@mu.ie\") || this.state.emailReset.endsWith(\"@gmail.com\") || this.state.emailReset.endsWith(\"@hotmail.com\"); //if the user forget password they can reset the password using this function\n\n      if (!validEmail) {\n        alert(\"Please enter a Valid Email Address\");\n        return;\n      }\n\n      fire.auth().sendPasswordResetEmail(this.state.emailReset).then(alert(\"An email has been sent to your Email with Instructions to reset your password\"));\n    };\n\n    this.changeResetModal = () => {\n      this.setState({\n        viewPasswordReset: true,\n        hideForgotPass: false\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      emailReset: \"\",\n      isActive: false,\n      viewPasswordReset: false,\n      hideForgotPass: true,\n      password: \"\",\n      viewWelcome: false,\n      //initialize the state variables\n      viewLogin: true\n    };\n  }\n\n  render() {\n    return React.createElement(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.viewPasswordReset ? React.createElement(\"div\", {\n      onClick: () => {\n        this.setState({\n          hideForgotPass: true,\n          //back arrow to go back to login page from the reset password page\n          viewPasswordReset: false\n        });\n      },\n      id: \"leftArrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(FaArrowCircleLeft, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"emailpassdiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"loginHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"profileicon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(FaUserCircle, {\n      size: 75,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), this.state.hideForgotPass ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(MdMail, {\n      color: \"navy\",\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"input-with-icon-grid\",\n      label: \"Enter Email\",\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }))), this.state.email.endsWith(\"@mumail.ie\") || this.state.email.endsWith(\"@mu.ie\") || this.state.email.endsWith(\"@gmail.com\") ? React.createElement(\"span\", {\n      style: {\n        color: \"#00FF7F\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"That's a Valid Email!\") : React.createElement(\"span\", {\n      style: {\n        color: \"rgb(179, 44, 44)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Enter Valid Email\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })) : null, this.state.hideForgotPass ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(AiOutlineLock, {\n      color: \"navy\",\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true //hding the email and passowrd fields when forgot password is clicked\n      ,\n      id: \"input-with-icon-grid\",\n      label: \"Enter Password\",\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))), this.state.password.length >= 6 ? React.createElement(\"span\", {\n      style: {\n        color: \"#00FF7F\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Minimum 6 characters long\\u2002\", React.createElement(MdDone, {\n      size: 23,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })) : React.createElement(\"span\", {\n      style: {\n        color: \"rgb(179, 44, 44)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Minumum 6 characters long\\u2002\", React.createElement(MdPriorityHigh, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))) : null, this.state.viewPasswordReset ? React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      alignItems: \"flex-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(MdMail, {\n      color: \"navy\",\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), \" \", React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"input-with-icon-grid\",\n      label: \"Enter your Sign-in Email\" //email reseting input fields\n      ,\n      type: \"email\",\n      name: \"emailReset\",\n      value: this.state.emailReset,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))) : null, this.state.hideForgotPass ? React.createElement(\"a\", {\n      onClick: this.changeResetModal,\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Forgot Password ?\") //hides forgot password when the link is clicked\n    : null), this.state.viewPasswordReset ? React.createElement(Button, {\n      style: {\n        height: 50,\n        width: 200,\n        fontSize: 17,\n        //hides the button when forgot password link is not clicked\n        borderRadius: 30\n      },\n      variant: \"info\",\n      className: \"resetBtn\",\n      onClick: () => {\n        this.passwordReset();\n        this.setState({\n          viewPasswordReset: false,\n          hideForgotPass: true //reset the values for password reset\n\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Sent Recovery Email\") : null, this.state.viewPasswordReset ? null : React.createElement(Button, {\n      style: {\n        height: 50,\n        width: 200,\n        fontSize: 17,\n        borderRadius: 30\n      },\n      className: \"Loginbtn\",\n      variant: \"info\",\n      onClick: () => {\n        this.login(); //login button\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Login \", React.createElement(GiFarmTractor, {\n      size: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"loadingSpinner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \" \", React.createElement(Spinner, {\n      as: \"div\",\n      animation: \"border\",\n      size: \"bg\",\n      role: \"status\",\n      \"aria-hidden\": \"true\",\n      text: \"Signing In\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })))), this.state.viewWelcome ? React.createElement(Welcome, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/login.js"],"names":["React","Component","fire","Button","LoadingOverlay","Spinner","GiFarmTractor","MdMail","MdDone","MdPriorityHigh","FaUserCircle","FaArrowCircleLeft","AiOutlineLock","TextField","Grid","Welcome","Login","constructor","props","handleChange","e","target","value","type","checked","name","setState","login","auth","signInWithEmailAndPassword","state","email","password","then","u","viewWelcome","viewLogin","console","log","catch","error","alert","message","passwordReset","validEmail","emailReset","endsWith","sendPasswordResetEmail","changeResetModal","viewPasswordReset","hideForgotPass","isActive","render","color","length","height","width","fontSize","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport fire from \"../../config/fire\";\nimport { Button } from \"react-bootstrap\";\nimport LoadingOverlay from \"react-loading-overlay\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./login.css\";\nimport { GiFarmTractor } from \"react-icons/gi\";\nimport { MdMail, MdDone, MdPriorityHigh } from \"react-icons/md\";\nimport { FaUserCircle, FaArrowCircleLeft } from \"react-icons/fa\";\nimport { AiOutlineLock } from \"react-icons/ai\";\nimport TextField from \"@material-ui/core/TextField\"; //imported all the neccessary libraries,API's,Components\nimport Grid from \"@material-ui/core/Grid\";\nimport Welcome from \"../home/welcome\";\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: \"\",\n      emailReset: \"\",\n      isActive: false,\n      viewPasswordReset: false,\n      hideForgotPass: true,\n      password: \"\",\n      viewWelcome: false, //initialize the state variables\n      viewLogin: true\n    };\n  }\n  handleChange = e => {\n    const target = e.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value; //this function looks out for an change in value then triggers\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  login = e => {\n    fire\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password) //function for authenticating the login with email and password\n      .then(u => {\n        this.setState({\n          viewWelcome: true,\n\n          viewLogin: false\n        });\n        console.log(\"Logged in\");\n      })\n      .catch(error => {\n        alert(\"Please enter a Valid Email Address or Password\");\n\n        console.log(error.message);\n      });\n  };\n  passwordReset = e => {\n    //  e.preventDefault();\n\n    const validEmail =\n      this.state.emailReset.endsWith(\"@mumail.ie\") ||\n      this.state.emailReset.endsWith(\"@mu.ie\") ||\n      this.state.emailReset.endsWith(\"@gmail.com\") ||\n      this.state.emailReset.endsWith(\"@hotmail.com\"); //if the user forget password they can reset the password using this function\n\n    if (!validEmail) {\n      alert(\"Please enter a Valid Email Address\");\n      return;\n    }\n\n    fire\n      .auth()\n      .sendPasswordResetEmail(this.state.emailReset)\n      .then(\n        alert(\n          \"An email has been sent to your Email with Instructions to reset your password\"\n        )\n      );\n  };\n  changeResetModal = () => {\n    this.setState({\n      viewPasswordReset: true,\n      hideForgotPass: false\n    });\n  };\n\n  render() {\n    return (\n      <body>\n        <div>\n          {/* here we are creating the login form with email and password input fields, also we do some checks for if password is the correct length etc.*/}\n\n          <form className=\"loginForm\">\n            {this.state.viewPasswordReset ? (\n              <div\n                onClick={() => {\n                  this.setState({\n                    hideForgotPass: true, //back arrow to go back to login page from the reset password page\n                    viewPasswordReset: false\n                  });\n                }}\n                id=\"leftArrow\"\n              >\n                <FaArrowCircleLeft size={20} />\n              </div>\n            ) : null}\n            <div className=\"emailpassdiv\">\n              <h1 className=\"loginHeader\">Login</h1>\n              <br />\n              <div className=\"profileicon\">\n                <FaUserCircle size={75} />\n              </div>\n              <br />\n              {this.state.hideForgotPass ? (\n                <div>\n                  <Grid container spacing={1} alignItems=\"flex-end\">\n                    <Grid item>\n                      <MdMail color={\"navy\"} size={20} />\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        required\n                        id=\"input-with-icon-grid\"\n                        label=\"Enter Email\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  {this.state.email.endsWith(\"@mumail.ie\") ||\n                  this.state.email.endsWith(\"@mu.ie\") ||\n                  this.state.email.endsWith(\"@gmail.com\") ? (\n                    <span style={{ color: \"#00FF7F\" }}>\n                      That's a Valid Email!\n                    </span>\n                  ) : (\n                    <span style={{ color: \"rgb(179, 44, 44)\" }}>\n                      Enter Valid Email\n                    </span>\n                  )}\n                  <br></br>\n                </div>\n              ) : null}\n              {this.state.hideForgotPass ? (\n                <div>\n                  <Grid container spacing={1} alignItems=\"flex-end\">\n                    <Grid item>\n                      <AiOutlineLock color={\"navy\"} size={20} />\n                    </Grid>\n                    <Grid item>\n                      <TextField\n                        required //hding the email and passowrd fields when forgot password is clicked\n                        id=\"input-with-icon-grid\"\n                        label=\"Enter Password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  {this.state.password.length >= 6 ? (\n                    <span style={{ color: \"#00FF7F\" }}>\n                      Minimum 6 characters long&ensp;\n                      <MdDone size={23} />\n                    </span>\n                  ) : (\n                    <span style={{ color: \"rgb(179, 44, 44)\" }}>\n                      Minumum 6 characters long&ensp;\n                      <MdPriorityHigh size={20} />\n                    </span>\n                  )}\n                </div>\n              ) : null}\n              {this.state.viewPasswordReset ? (\n                <Grid container spacing={1} alignItems=\"flex-end\">\n                  <Grid item>\n                    <MdMail color={\"navy\"} size={20} />\n                  </Grid>{\" \"}\n                  <Grid item>\n                    <TextField\n                      required\n                      id=\"input-with-icon-grid\"\n                      label=\"Enter your Sign-in Email\" //email reseting input fields\n                      type=\"email\"\n                      name=\"emailReset\"\n                      value={this.state.emailReset}\n                      onChange={this.handleChange}\n                    />\n                  </Grid>\n                </Grid>\n              ) : null}\n              {this.state.hideForgotPass ? (\n                <a onClick={this.changeResetModal} href=\"#\">\n                  Forgot Password ?\n                </a> //hides forgot password when the link is clicked\n              ) : null}\n            </div>\n            {this.state.viewPasswordReset ? (\n              <Button\n                style={{\n                  height: 50,\n                  width: 200,\n                  fontSize: 17, //hides the button when forgot password link is not clicked\n                  borderRadius: 30\n                }}\n                variant=\"info\"\n                className=\"resetBtn\"\n                onClick={() => {\n                  this.passwordReset();\n                  this.setState({\n                    viewPasswordReset: false,\n                    hideForgotPass: true //reset the values for password reset\n                  });\n                }}\n              >\n                Sent Recovery Email\n              </Button>\n            ) : null}\n\n            {this.state.viewPasswordReset ? null : (\n              <Button\n                style={{\n                  height: 50,\n                  width: 200,\n                  fontSize: 17,\n                  borderRadius: 30\n                }}\n                className=\"Loginbtn\"\n                variant=\"info\"\n                onClick={() => {\n                  this.login(); //login button\n                }}\n              >\n                Login <GiFarmTractor size={22} />\n              </Button>\n            )}\n            <div className=\"loadingSpinner\">\n              {\" \"}\n              <Spinner\n                as=\"div\"\n                animation=\"border\"\n                size=\"bg\"\n                role=\"status\"\n                aria-hidden=\"true\"\n                text=\"Signing In\"\n              />\n            </div>\n          </form>\n        </div>\n        {this.state.viewWelcome ? <Welcome /> : null}\n      </body>\n    );\n  }\n}\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}