{"ast":null,"code":"import { useCallback, useRef } from 'react';\n\nvar isTouchEvent = function (event) {\n  return 'touches' in event;\n};\n\nvar preventDefault = function (event) {\n  if (!isTouchEvent(event)) return;\n\n  if (event.touches.length < 2 && event.preventDefault) {\n    event.preventDefault();\n  }\n};\n\nvar useLongPress = function (callback, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.isPreventDefault,\n      isPreventDefault = _c === void 0 ? true : _c,\n      _d = _b.delay,\n      delay = _d === void 0 ? 300 : _d;\n\n  var timeout = useRef();\n  var target = useRef();\n  var start = useCallback(function (event) {\n    // prevent ghost click on mobile devices\n    if (isPreventDefault && event.target) {\n      event.target.addEventListener('touchend', preventDefault, {\n        passive: false\n      });\n      target.current = event.target;\n    }\n\n    timeout.current = setTimeout(function () {\n      return callback(event);\n    }, delay);\n  }, [callback, delay]);\n  var clear = useCallback(function () {\n    // clearTimeout and removeEventListener\n    timeout.current && clearTimeout(timeout.current);\n\n    if (isPreventDefault && target.current) {\n      target.current.removeEventListener('touchend', preventDefault);\n    }\n  }, []);\n  return {\n    onMouseDown: function (e) {\n      return start(e);\n    },\n    onTouchStart: function (e) {\n      return start(e);\n    },\n    onMouseUp: clear,\n    onMouseLeave: clear,\n    onTouchEnd: clear\n  };\n};\n\nexport default useLongPress;","map":null,"metadata":{},"sourceType":"module"}