{"ast":null,"code":"import { createFactory, createContext, useContext, useReducer } from 'react';\n\nvar createReducerContext = function (reducer, defaultInitialState) {\n  var context = createContext(undefined);\n  var providerFactory = createFactory(context.Provider);\n\n  var ReducerProvider = function (_a) {\n    var children = _a.children,\n        initialState = _a.initialState;\n    var state = useReducer(reducer, initialState !== undefined ? initialState : defaultInitialState);\n    return providerFactory({\n      value: state\n    }, children);\n  };\n\n  var useReducerContext = function () {\n    var state = useContext(context);\n\n    if (state == null) {\n      throw new Error(\"useReducerContext must be used inside a ReducerProvider.\");\n    }\n\n    return state;\n  };\n\n  return [useReducerContext, ReducerProvider, context];\n};\n\nexport default createReducerContext;","map":null,"metadata":{},"sourceType":"module"}