{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight, FaSadTear, FaSmile } from \"react-icons/fa\"; //import { MdClose } from \"react-icons/md\";\n\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport Welcome from \"../home/welcome\";\nimport UserProfile from \"./userProfile\"; //import { Label } from \"semantic-ui-react\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz2 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata2[currentQuest].question,\n          options: Quizdata2[currentQuest].options,\n          answer: Quizdata2[currentQuest].answer,\n          pictures: Quizdata2[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz3 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata3[currentQuest].question,\n          options: Quizdata3[currentQuest].options,\n          answer: Quizdata3[currentQuest].answer,\n          pictures: Quizdata3[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz4 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata4[currentQuest].question,\n          options: Quizdata4[currentQuest].options,\n          answer: Quizdata4[currentQuest].answer,\n          pictures: Quizdata4[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.loadQuiz5 = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata5[currentQuest].question,\n          options: Quizdata5[currentQuest].options,\n          answer: Quizdata5[currentQuest].answer,\n          pictures: Quizdata5[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\");\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      const rookie = this.props.userLevel1;\n      const student = this.props.userLevel2;\n      const intermediate = this.props.userLevel3;\n      const expert = this.props.userLevel4;\n      const master = this.props.userLevel5;\n      const rankVal = this.props.rankValue;\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns,\n        Score: this.state.scores,\n        UserLevel: rookie,\n        UserLevelStudent: student,\n        UserLevelIntermediate: intermediate,\n        UserLevelExpert: expert,\n        UserLevelMaster: master,\n        RankValue: rankVal\n      }); //this.props.DBdata();\n\n      console.log(\"Sent to Database\");\n    };\n\n    this.nextQuestion = () => {\n      const _this$state = this.state,\n            scores = _this$state.scores,\n            correct = _this$state.correct,\n            answer = _this$state.answer,\n            userAns = _this$state.userAns,\n            currentQuest = _this$state.currentQuest,\n            checker = _this$state.checker;\n\n      if (userAns === null) {\n        return;\n      } // e.preventDefault();\n\n      /*  if (correct) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1\n        });\n      } else {\n        this.setState({ scores: scores });\n        console.log(\"Wrong\");\n      }\n      console.log(\"scores \" + this.state.scores);\n      */\n\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1 // correct: false\n\n        });\n      } else {\n        this.setState({\n          scores: scores\n        }); //  alert(\"Correct Answer is \" + answer);\n        //);\n      }\n\n      console.log(\"scores \" + this.state.scores);\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      });\n\n      if (currentQuest === Quizdata.length - 1) {\n        this.setState({\n          checker: true\n        });\n      }\n    };\n\n    this.checkAns = answer => {\n      const userAns = this.state.userAns; //userans and answer switched\n\n      this.setState({\n        userAns: answer,\n        disabled: false\n      });\n      /*  if (userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          correct: true\n        });\n      } else {\n        this.setState({\n          correct: false\n        });\n      }\n      */\n      //  alert(\"Correct answer is \" + answer);\n      //  console.log(userAns);\n    };\n\n    this.finishQuiz = answer => {\n      const _this$state2 = this.state,\n            scores = _this$state2.scores,\n            userAns = _this$state2.userAns,\n            checker = _this$state2.checker;\n\n      if (this.state.currentQuest === Quizdata.length - 1) {\n        this.setState({\n          isEnd: true //  d: this.props.current\n\n        });\n      }\n\n      if (checker && userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1 // correct: false\n\n        });\n      } else {\n        console.log(\"wrong\");\n        this.setState({\n          scores: scores\n        }); //  alert(\"Correct Answer is \" + answer);\n        //);\n      }\n\n      console.log(\"scores \" + this.state.scores);\n      /*  if (this.state.correct) {\n        // last question score updation here as cant be done in nextquestion function due to out of bounds\n        console.log(\"Correct on finish\");\n        console.log(\"scores before update \" + this.state.scores);\n        this.setState({\n          scores: this.state.scores + 1\n        });\n      } else {\n        this.setState({ scores: scores });\n        console.log(\"Wrong\");\n      }\n      console.log(\"scores after updation \" + this.state.scores);\n      */\n      // this.props.DBdata();\n      //console.log(\"Sent to Database from on finish\");\n\n      /* setTimeout(() => {\n          this.setState({\n            isEnd: false\n          });\n        }, 3500);\n        */\n\n      console.log(\"rank \" + this.props.rankValue);\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0,\n      isEnd: false,\n      people: [],\n      scores: 0,\n      pictures: \"\",\n      checker: false,\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false,\n      correct: true\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const _this$state3 = this.state,\n          currentQuest = _this$state3.currentQuest,\n          checker = _this$state3.checker;\n\n    if (checker === false) {\n      if (this.props.userLevel1) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata[currentQuest].question,\n            options: Quizdata[currentQuest].options,\n            answer: Quizdata[currentQuest].answer,\n            pictures: Quizdata[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel2) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata2[currentQuest].question,\n            options: Quizdata2[currentQuest].options,\n            answer: Quizdata2[currentQuest].answer,\n            pictures: Quizdata2[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel3) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata3[currentQuest].question,\n            options: Quizdata3[currentQuest].options,\n            answer: Quizdata3[currentQuest].answer,\n            pictures: Quizdata3[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel4) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata4[currentQuest].question,\n            options: Quizdata4[currentQuest].options,\n            answer: Quizdata4[currentQuest].answer,\n            pictures: Quizdata4[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel5) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata5[currentQuest].question,\n            options: Quizdata5[currentQuest].options,\n            answer: Quizdata5[currentQuest].answer,\n            pictures: Quizdata5[currentQuest].picture\n          });\n        }\n      }\n    }\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          userAns = _this$state4.userAns,\n          scores = _this$state4.scores,\n          options = _this$state4.options,\n          currentQuest = _this$state4.currentQuest,\n          isEnd = _this$state4.isEnd;\n\n    if (isEnd && scores >= 5) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResultsPass\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Quiz Finished, You passed \", this.state.scores, \"/\", Quizdata.length - 1, \" \", React.createElement(FaSmile, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }), \"!\"), React.createElement(Button, {\n        onClick: this.props.articleVal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, \"next challenge\"));\n    } else if (isEnd && scores < 5) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"SummaryResultsFail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, \"Quiz Finished, You failed \", this.state.scores, \"/\", Quizdata.length - 1, \" \", React.createElement(FaSadTear, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }), \"!\"), React.createElement(Button, {\n        id: \"tryagain\",\n        onClick: () => {\n          this.props.tryAgain();\n          this.props.tryAgain2();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, \"Try Again\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"quizForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        animated: true,\n        now: this.state.currentQuest * 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      })), this.state.questions, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, \"Q\", this.state.currentQuest), this.state.pictures, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }), options.map((option, id) => React.createElement(Button, {\n        size: \"lg\",\n        block: true,\n        key: id,\n        className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n        onClick: () => this.checkAns(option),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, option)), this.state.correct ? null : React.createElement(Alert, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, \"correct answer is \", this.state.answer), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: () => this.checkAns(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }, \"CHECK \", React.createElement(FaHorse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474\n        },\n        __self: this\n      })), currentQuest < Quizdata.length - 1 && React.createElement(Button, {\n        disabled: this.state.disabled,\n        onClick: () => {\n          this.nextQuestion();\n          this.pushtoDB(); // this.updatedData();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, \"NEXT \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }), currentQuest === Quizdata.length - 1 && React.createElement(Button, {\n        onClick: () => {\n          this.finishQuiz();\n          this.nextQuestion();\n          this.pushtoDB();\n          this.props.handleDisableValue(scores); // child to parent\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491\n        },\n        __self: this\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaHorse","FaArrowRight","FaSadTear","FaSmile","Button","ProgressBar","Alert","Questions","Quizdata","Quizdata2","Quizdata3","Quizdata4","Quizdata5","Welcome","UserProfile","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","answer","pictures","picture","console","log","loadQuiz2","loadQuiz3","loadQuiz4","loadQuiz5","logout","e","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","rookie","userLevel1","student","userLevel2","intermediate","userLevel3","expert","userLevel4","master","userLevel5","rankVal","rankValue","set","ID","currentUser","uid","UserEmail","email","Question","UserAnswer","userAns","Score","scores","UserLevel","UserLevelStudent","UserLevelIntermediate","UserLevelExpert","UserLevelMaster","RankValue","nextQuestion","correct","checker","length","checkAns","disabled","finishQuiz","isEnd","people","level1","level2","level3","level4","level5","componentDidMount","componentDidUpdate","prevProps","prevState","render","articleVal","tryAgain","tryAgain2","textAlign","map","option","id","handleDisableValue"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight, FaSadTear, FaSmile } from \"react-icons/fa\";\n//import { MdClose } from \"react-icons/md\";\nimport { Button, ProgressBar } from \"react-bootstrap\";\nimport { Alert } from \"reactstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport { Quizdata2 } from \"./questionsLevel2\";\nimport { Quizdata3 } from \"./questionsLevel3\";\nimport { Quizdata4 } from \"./questionsLevel4\";\nimport { Quizdata5 } from \"./questionsLevel5\";\nimport Welcome from \"../home/welcome\";\nimport UserProfile from \"./userProfile\";\n//import { Label } from \"semantic-ui-react\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: false,\n      currentQuest: 0,\n      isEnd: false,\n      people: [],\n      scores: 0,\n      pictures: \"\",\n      checker: false,\n\n      level1: false,\n      level2: false,\n      level3: false,\n      level4: false,\n      level5: false,\n      correct: true\n    };\n  }\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz2 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata2[currentQuest].question,\n        options: Quizdata2[currentQuest].options,\n        answer: Quizdata2[currentQuest].answer,\n        pictures: Quizdata2[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz3 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata3[currentQuest].question,\n        options: Quizdata3[currentQuest].options,\n        answer: Quizdata3[currentQuest].answer,\n        pictures: Quizdata3[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  loadQuiz4 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata4[currentQuest].question,\n        options: Quizdata4[currentQuest].options,\n        answer: Quizdata4[currentQuest].answer,\n        pictures: Quizdata4[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n  loadQuiz5 = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata5[currentQuest].question,\n        options: Quizdata5[currentQuest].options,\n        answer: Quizdata5[currentQuest].answer,\n        pictures: Quizdata5[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  componentDidMount() {\n    if (this.props.userLevel1) {\n      this.loadQuiz();\n      console.log(\"Quiz1 loaded\"); //loads quiz 1 data in\n    } else if (this.props.userLevel2) {\n      this.loadQuiz2(); //loads quiz 2 data in\n      console.log(\"Quiz2 loaded\");\n    } else if (this.props.userLevel3) {\n      this.loadQuiz3(); //loads quiz3  data\n      console.log(\"Quiz3 loaded\");\n    } else if (this.props.userLevel4) {\n      this.loadQuiz4(); //loads quiz4  data in\n      console.log(\"Quiz4 loaded\");\n    } else if (this.props.userLevel5) {\n      this.loadQuiz5(); //loads quiz 5 data in\n      console.log(\"Quiz5 loaded\");\n    } else {\n      console.log(\"No user states changed\");\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest, checker } = this.state;\n    if (checker === false) {\n      if (this.props.userLevel1) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata[currentQuest].question,\n            options: Quizdata[currentQuest].options,\n            answer: Quizdata[currentQuest].answer,\n            pictures: Quizdata[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel2) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata2[currentQuest].question,\n            options: Quizdata2[currentQuest].options,\n            answer: Quizdata2[currentQuest].answer,\n            pictures: Quizdata2[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel3) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata3[currentQuest].question,\n            options: Quizdata3[currentQuest].options,\n            answer: Quizdata3[currentQuest].answer,\n            pictures: Quizdata3[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel4) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata4[currentQuest].question,\n            options: Quizdata4[currentQuest].options,\n            answer: Quizdata4[currentQuest].answer,\n            pictures: Quizdata4[currentQuest].picture\n          });\n        }\n      } else if (this.props.userLevel5) {\n        if (this.state.currentQuest !== prevState.currentQuest) {\n          this.setState({\n            disabled: true,\n            questions: Quizdata5[currentQuest].question,\n            options: Quizdata5[currentQuest].options,\n            answer: Quizdata5[currentQuest].answer,\n            pictures: Quizdata5[currentQuest].picture\n          });\n        }\n      }\n    }\n  }\n\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\");\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n    const rankVal = this.props.rankValue;\n\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie,\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master,\n      RankValue: rankVal\n    });\n    //this.props.DBdata();\n    console.log(\"Sent to Database\");\n  };\n  /*\n  pushtoDB2 = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    const rookie = this.props.userLevel1;\n    const student = this.props.userLevel2;\n    const intermediate = this.props.userLevel3;\n    const expert = this.props.userLevel4;\n    const master = this.props.userLevel5;\n    const rankVal = this.props.rankValue;\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns,\n      Score: this.state.scores,\n      UserLevel: rookie, ///need to change the name of these as it overrides the value in the database\n      UserLevelStudent: student,\n      UserLevelIntermediate: intermediate,\n      UserLevelExpert: expert,\n      UserLevelMaster: master,\n      RankValue: rankVal\n    });\n    // this.props.DBdata();\n    console.log(\"Sent to Database\");\n  };\n  */\n  /*updatedData = () => {\n    fire.auth().onAuthStateChanged(user => {\n      if (user) {\n        var ref = fire\n          .database()\n          .ref(\"data\")\n          .limitToLast(1);\n        //takes the last data in DB\n\n        var userUID = fire.auth().currentUser.uid;\n        var query = ref.orderByChild(\"ID\").equalTo(userUID); //retrieves data about only the current logged in user\n        console.log(userUID);\n        query.once(\"value\", snapshot => {\n          let currentState = this.state.people;\n\n          const currentUser = snapshot.val();\n          for (let i in currentUser) {\n            currentState.push({\n              email: currentUser[i].UserEmail,\n              UserAnswer: currentUser[i].UserAnswer,\n              Questions: currentUser[i].Question,\n              id: currentUser[i].ID,\n              Score: currentUser[i].Score,\n              levelRook: currentUser[i].UserLevel,\n              levelStudent: currentUser[i].UserLevelStudent,\n              levelIntermediate: currentUser[i].UserLevelIntermediate,\n              levelExpert: currentUser[i].UserLevelExpert,\n              levelMaster: currentUser[i].UserLevelMaster,\n              rank: currentUser[i].RankValue\n            });\n          }\n\n          // currentState.push(user);\n          console.log(\"new updated DB in quiz\" + currentState);\n          //  this.rankData(); //setting rank value from DB\n\n          this.setState({\n            people: currentState\n            // dataHasLoaded: true\n          });\n        });\n      } else {\n        console.log(\"no user\");\n      }\n    });\n  };\n  */\n  nextQuestion = () => {\n    const {\n      scores,\n      correct,\n      answer,\n      userAns,\n      currentQuest,\n      checker\n    } = this.state;\n    if (userAns === null) {\n      return;\n    }\n    // e.preventDefault();\n    /*  if (correct) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: scores + 1\n      });\n    } else {\n      this.setState({ scores: scores });\n      console.log(\"Wrong\");\n    }\n    console.log(\"scores \" + this.state.scores);\n*/\n\n    if (userAns === answer) {\n      console.log(\"Correct\");\n\n      this.setState({\n        scores: scores + 1\n        // correct: false\n      });\n    } else {\n      this.setState({ scores: scores });\n      //  alert(\"Correct Answer is \" + answer);\n      //);\n    }\n    console.log(\"scores \" + this.state.scores);\n    this.setState({\n      currentQuest: this.state.currentQuest + 1\n    });\n\n    if (currentQuest === Quizdata.length - 1) {\n      this.setState({\n        checker: true\n      });\n    }\n  };\n\n  checkAns = answer => {\n    const { userAns } = this.state;\n    //userans and answer switched\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n\n    /*  if (userAns === answer) {\n      console.log(\"Correct\");\n      this.setState({\n        correct: true\n      });\n    } else {\n      this.setState({\n        correct: false\n      });\n    }\n    */\n\n    //  alert(\"Correct answer is \" + answer);\n    //  console.log(userAns);\n  };\n\n  finishQuiz = answer => {\n    const { scores, userAns, checker } = this.state;\n\n    if (this.state.currentQuest === Quizdata.length - 1) {\n      this.setState({\n        isEnd: true\n        //  d: this.props.current\n      });\n    }\n\n    if (checker && userAns === answer) {\n      console.log(\"Correct\");\n\n      this.setState({\n        scores: scores + 1\n        // correct: false\n      });\n    } else {\n      console.log(\"wrong\");\n      this.setState({ scores: scores });\n\n      //  alert(\"Correct Answer is \" + answer);\n      //);\n    }\n    console.log(\"scores \" + this.state.scores);\n\n    /*  if (this.state.correct) {\n      // last question score updation here as cant be done in nextquestion function due to out of bounds\n      console.log(\"Correct on finish\");\n      console.log(\"scores before update \" + this.state.scores);\n      this.setState({\n        scores: this.state.scores + 1\n      });\n    } else {\n      this.setState({ scores: scores });\n      console.log(\"Wrong\");\n    }\n    console.log(\"scores after updation \" + this.state.scores);\n*/\n    // this.props.DBdata();\n    //console.log(\"Sent to Database from on finish\");\n    /* setTimeout(() => {\n        this.setState({\n          isEnd: false\n        });\n      }, 3500);\n      */\n    console.log(\"rank \" + this.props.rankValue);\n  };\n\n  render() {\n    const { userAns, scores, options, currentQuest, isEnd } = this.state;\n    if (isEnd && scores >= 5) {\n      return (\n        <div>\n          <h3 className=\"SummaryResultsPass\">\n            Quiz Finished, You passed {this.state.scores}/{Quizdata.length - 1}{\" \"}\n            <FaSmile />!\n          </h3>\n\n          <Button onClick={this.props.articleVal}>next challenge</Button>\n        </div>\n      );\n    } else if (isEnd && scores < 5) {\n      return (\n        <div>\n          <h3 className=\"SummaryResultsFail\">\n            Quiz Finished, You failed {this.state.scores}/{Quizdata.length - 1}{\" \"}\n            <FaSadTear />!\n          </h3>\n          <Button\n            id=\"tryagain\"\n            onClick={() => {\n              this.props.tryAgain();\n              this.props.tryAgain2();\n            }}\n          >\n            Try Again\n          </Button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"quizForm\">\n          <br></br>\n          <div>\n            <ProgressBar animated now={this.state.currentQuest * 10} />\n          </div>\n          {this.state.questions}\n          <br></br>\n          <p style={{ textAlign: \"center\" }}>Q{this.state.currentQuest}</p>\n          {this.state.pictures}\n          <br></br>\n\n          {options.map((option, id) => (\n            <Button\n              size=\"lg\"\n              block\n              key={id}\n              className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n              onClick={() => this.checkAns(option)}\n            >\n              {option}\n            </Button>\n          ))}\n          {this.state.correct ? null : (\n            <Alert color=\"warning\">correct answer is {this.state.answer}</Alert>\n          )}\n          <br></br>\n          <Button onClick={() => this.checkAns()}>\n            CHECK <FaHorse />\n          </Button>\n          {currentQuest < Quizdata.length - 1 && (\n            <Button\n              disabled={this.state.disabled}\n              onClick={() => {\n                this.nextQuestion();\n                this.pushtoDB();\n                // this.updatedData();\n              }}\n            >\n              NEXT <FaArrowRight />\n            </Button>\n          )}\n          <br></br>\n\n          {currentQuest === Quizdata.length - 1 && (\n            <Button\n              onClick={() => {\n                this.finishQuiz();\n                this.nextQuestion();\n                this.pushtoDB();\n                this.props.handleDisableValue(scores); // child to parent\n              }}\n            >\n              Finish\n            </Button>\n          )}\n        </div>\n      );\n    }\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}