{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\"; //import pictures from \"../pictures/health_hazard.jpg\";\n\nimport { Button, ButtonGroup, Badge, ButtonToolbar, Spinner, Alert, Item, DropdownButton, Toast } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      }); // console.log(this.state.options.option);\n    };\n\n    this.nextQuestion = e => {\n      e.preventDefault();\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      }); //if (userAns == answer) {\n\n      this.setState({\n        scores: this.state.scores + 1\n      }); //}\n      //console.log(this.state.currentQuest);\n    };\n\n    this.checkAnswer = answer => {\n      //  e.preventDefault();\n      this.setState({\n        userAns: answer\n      }); //  console.log(this.state.options);\n    };\n\n    this.state = {\n      userAns: null,\n      options: [],\n      answers: \"\",\n      questions: \"\",\n      currentQuest: 0,\n      scores: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          userAns = _this$state.userAns,\n          option = _this$state.option,\n          questions = _this$state.questions,\n          answers = _this$state.answers;\n    return React.createElement(\"div\", {\n      className: \"lol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.state.questions, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), options.map((lol, i) => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, lol)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: () => this.checkAnswer(option),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"CHECK\"), React.createElement(Button, {\n      onClick: this.nextQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"NEXT\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), this.state.scores, this.state.currentQuest === Quizdata.length - 1 ? alert(\"Quiz FINISHED\") : null);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","Button","ButtonGroup","Badge","ButtonToolbar","Spinner","Alert","Item","DropdownButton","Toast","Questions","Quizdata","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","options","option","answers","answer","pictures","picture","nextQuestion","e","preventDefault","scores","checkAnswer","userAns","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","lol","i","length","alert"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\n//import pictures from \"../pictures/health_hazard.jpg\";\nimport {\n  Button,\n  ButtonGroup,\n  Badge,\n  ButtonToolbar,\n  Spinner,\n  Alert,\n  Item,\n  DropdownButton,\n  Toast\n} from \"react-bootstrap\";\n\nimport Questions, { Quizdata } from \"./questions\";\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userAns: null,\n      options: [],\n      answers: \"\",\n      questions: \"\",\n      currentQuest: 0,\n      scores: 0\n    };\n  }\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].option,\n        answers: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    // console.log(this.state.options.option);\n  };\n\n  componentDidMount() {\n    this.loadQuiz();\n  }\n\n  nextQuestion = e => {\n    e.preventDefault();\n    this.setState({\n      currentQuest: this.state.currentQuest + 1\n    });\n    //if (userAns == answer) {\n    this.setState({\n      scores: this.state.scores + 1\n    });\n    //}\n    //console.log(this.state.currentQuest);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].option,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    }\n  }\n\n  checkAnswer = answer => {\n    //  e.preventDefault();\n\n    this.setState({\n      userAns: answer\n    });\n\n    //  console.log(this.state.options);\n  };\n\n  render() {\n    const { userAns, option, questions, answers } = this.state;\n\n    return (\n      <div className=\"lol\">\n        <br></br>\n        {this.state.questions}\n        <br></br>\n        {/* {this.state.options.map(\n          item => (\n            <button\n              id=\"optionsData\"\n              className=\"ui floating message options\"\n              className={userAns === this.state.options ? \"selected\" : null}\n              onClick={() => this.checkAnswer(option)}\n            >\n              {item}\n            </button>\n          ) maps the options on the page\n        )}\n          */}\n\n        {options.map((lol, i) => (\n          <p>{lol}</p>\n        ))}\n\n        <br></br>\n        <Button onClick={() => this.checkAnswer(option)}>CHECK</Button>\n        <Button onClick={this.nextQuestion}>NEXT</Button>\n        <br></br>\n        {this.state.scores}\n\n        {this.state.currentQuest === Quizdata.length - 1\n          ? alert(\"Quiz FINISHED\")\n          : null}\n      </div>\n    );\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}