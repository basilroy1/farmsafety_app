{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/test.js\";\nimport React, { Component } from \"react\";\nimport QuestionBox from \"./questionBox\";\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\"; //import pictures from \"../pictures/health_hazard.jpg\";\n\nimport { Button, ButtonGroup, Badge, ButtonToolbar, Spinner, Alert, Item, DropdownButton, Toast } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\n\nclass Test extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      scores: 0,\n      currentQuest: 0\n    };\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questionBank: Quizdata //     questions: Quizdata[currentQuest].question,\n          //   options: Quizdata[currentQuest].option,\n          // answers: Quizdata[currentQuest].answer\n\n        };\n      }); // console.log(this.state.options.option);\n    };\n\n    this.checkAns = (answer, option) => {\n      if (answer == option) {\n        this.setState({\n          scores: this.state.scores + 1\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.questionBank.map(({\n      question,\n      option,\n      id,\n      answer\n    }) => React.createElement(QuestionBox, {\n      question: question,\n      option: option,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Test;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/test.js"],"names":["React","Component","QuestionBox","fire","Button","ButtonGroup","Badge","ButtonToolbar","Spinner","Alert","Item","DropdownButton","Toast","Questions","Quizdata","Test","state","questionBank","scores","currentQuest","loadQuiz","setState","checkAns","answer","option","componentDidMount","render","map","question","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,YAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,KAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,KANF,EAOEC,IAPF,EAQEC,cARF,EASEC,KATF,QAUO,iBAVP;AAYA,OAAOC,SAAP,IAAoBC,QAApB,QAAoC,aAApC;;AACA,MAAMC,IAAN,SAAmBd,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3Be,KAD2B,GACnB;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,MAAM,EAAE,CAFF;AAGNC,MAAAA,YAAY,EAAE;AAHR,KADmB;;AAAA,SAO3BC,QAP2B,GAOhB,MAAM;AAAA,YACPD,YADO,GACU,KAAKH,KADf,CACPG,YADO;AAEf,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AACLJ,UAAAA,YAAY,EAAEH,QADT,CAEL;AACA;AACA;;AAJK,SAAP;AAMD,OAPD,EAFe,CAUf;AACD,KAlB0B;;AAAA,SAmB3BQ,QAnB2B,GAmBhB,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC7B,UAAID,MAAM,IAAIC,MAAd,EAAsB;AACpB,aAAKH,QAAL,CAAc;AACZH,UAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAAX,GAAoB;AADhB,SAAd;AAGD;AACF,KAzB0B;AAAA;;AA2B3BO,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,QAAL,GADkB,CACD;AAClB;;AACDM,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWC,YAAX,CAAwBU,GAAxB,CAA4B,CAAC;AAAEC,MAAAA,QAAF;AAAYJ,MAAAA,MAAZ;AAAoBK,MAAAA,EAApB;AAAwBN,MAAAA;AAAxB,KAAD,KAC3B,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEK,QAAvB;AAAiC,MAAA,MAAM,EAAEJ,MAAzC;AAAiD,MAAA,GAAG,EAAEK,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAOD;;AAtC0B;;AAwC7B,eAAed,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport QuestionBox from \"./questionBox\";\n\nimport \"./quiz.css\";\nimport fire from \"../../config/fire\";\n//import pictures from \"../pictures/health_hazard.jpg\";\nimport {\n  Button,\n  ButtonGroup,\n  Badge,\n  ButtonToolbar,\n  Spinner,\n  Alert,\n  Item,\n  DropdownButton,\n  Toast\n} from \"react-bootstrap\";\n\nimport Questions, { Quizdata } from \"./questions\";\nclass Test extends Component {\n  state = {\n    questionBank: [],\n    scores: 0,\n    currentQuest: 0\n  };\n\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    this.setState(() => {\n      return {\n        questionBank: Quizdata\n        //     questions: Quizdata[currentQuest].question,\n        //   options: Quizdata[currentQuest].option,\n        // answers: Quizdata[currentQuest].answer\n      };\n    });\n    // console.log(this.state.options.option);\n  };\n  checkAns = (answer, option) => {\n    if (answer == option) {\n      this.setState({\n        scores: this.state.scores + 1\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n  render() {\n    return (\n      <div>\n        {this.state.questionBank.map(({ question, option, id, answer }) => (\n          <QuestionBox question={question} option={option} key={id} />\n        ))}\n      </div>\n    );\n  }\n}\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}