{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LISSY\\\\Documents\\\\project\\\\src\\\\components\\\\quiz\\\\quiz.js\";\nimport React, { Component } from \"react\";\nimport \"./quiz.css\"; //import pictures from \"../pictures/health_hazard.jpg\";\n\nimport { Button, ButtonGroup, Badge, ButtonToolbar, Spinner, Alert } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest;\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          option: Quizdata[currentQuest].options,\n          answers: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n    };\n\n    this.state = {\n      option: [],\n      currentQuest: 1\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"lol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.state.questions, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), this.state.option.map(option, key => React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"key=\", this.state.option.id)), this.state.option);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["C:/Users/LISSY/Documents/project/src/components/quiz/quiz.js"],"names":["React","Component","Button","ButtonGroup","Badge","ButtonToolbar","Spinner","Alert","Questions","Quizdata","Quiz","constructor","props","loadQuiz","currentQuest","state","setState","questions","question","option","options","answers","answer","pictures","picture","componentDidMount","render","map","key","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP,C,CACA;;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,KAHF,EAIEC,aAJF,EAKEC,OALF,EAMEC,KANF,QAOO,iBAPP;AAQA,OAAOC,SAAP,IAAoBC,QAApB,QAAoC,aAApC;;AACA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AAC3BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,QAPmB,GAOR,MAAM;AAAA,YACPC,YADO,GACU,KAAKC,KADf,CACPD,YADO;AAEf,WAAKE,QAAL,CAAc,MAAM;AAClB,eAAO;AACLC,UAAAA,SAAS,EAAER,QAAQ,CAACK,YAAD,CAAR,CAAuBI,QAD7B;AAELC,UAAAA,MAAM,EAAEV,QAAQ,CAACK,YAAD,CAAR,CAAuBM,OAF1B;AAGLC,UAAAA,OAAO,EAAEZ,QAAQ,CAACK,YAAD,CAAR,CAAuBQ,MAH3B;AAILC,UAAAA,QAAQ,EAAEd,QAAQ,CAACK,YAAD,CAAR,CAAuBU;AAJ5B,SAAP;AAMD,OAPD;AAQD,KAjBkB;;AAEjB,SAAKT,KAAL,GAAa;AACXI,MAAAA,MAAM,EAAE,EADG;AAEXL,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAYDW,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,QAAL;AACD;;AAEDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKX,KAAL,CAAWE,SADd,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIG,KAAKF,KAAL,CAAWI,MAAX,CAAkBQ,GAAlB,CAAsBR,MAAtB,EAA8BS,GAAG,IAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAQ,KAAKb,KAAL,CAAWI,MAAX,CAAkBU,EAA1B,CADD,CAJH,EAOG,KAAKd,KAAL,CAAWI,MAPd,CADF;AAWD;;AAnC0B;;AAqC7B,eAAeT,IAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./quiz.css\";\r\n//import pictures from \"../pictures/health_hazard.jpg\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Badge,\r\n  ButtonToolbar,\r\n  Spinner,\r\n  Alert\r\n} from \"react-bootstrap\";\r\nimport Questions, { Quizdata } from \"./questions\";\r\nclass Quiz extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      option: [],\r\n      currentQuest: 1\r\n    };\r\n  }\r\n  loadQuiz = () => {\r\n    const { currentQuest } = this.state;\r\n    this.setState(() => {\r\n      return {\r\n        questions: Quizdata[currentQuest].question,\r\n        option: Quizdata[currentQuest].options,\r\n        answers: Quizdata[currentQuest].answer,\r\n        pictures: Quizdata[currentQuest].picture\r\n      };\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.loadQuiz();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lol\">\r\n        {this.state.questions}\r\n        <br></br>\r\n\r\n        {this.state.option.map(option, key => (\r\n          <p>key={this.state.option.id}</p>\r\n        ))}\r\n        {this.state.option}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}