{"ast":null,"code":"var _jsxFileName = \"/home/basil/farmsafety_app/src/components/quiz/quiz.js\";\nimport React, { Component } from \"react\"; //import QuestionBox from \"./questionBox\";\n\nimport \"./quiz.css\"; //import from \"./login\"\n//import useState from \"react\";\n\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight } from \"react-icons/fa\";\nimport { Button, Alert, ButtonGroup, Toast, ProgressBar } from \"react-bootstrap\";\nimport Questions, { Quizdata } from \"./questions\";\nimport Login from \"./login\"; //import { Label } from \"semantic-ui-react\";\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userAns: null,\n      options: [],\n      disabled: true,\n      currentQuest: 0,\n      isEnd: false,\n      scores: 0,\n      pictures: \"\"\n    };\n\n    this.loadQuiz = () => {\n      const currentQuest = this.state.currentQuest; //  console.log(Quizdata[2].question);\n\n      this.setState(() => {\n        return {\n          questions: Quizdata[currentQuest].question,\n          options: Quizdata[currentQuest].options,\n          answer: Quizdata[currentQuest].answer,\n          pictures: Quizdata[currentQuest].picture\n        };\n      });\n      console.log(this.state.answer);\n    };\n\n    this.nextQuestion = e => {\n      // e.preventDefault();\n      if (this.state.userAns === null) {\n        alert(\"choose an option\");\n        return;\n      }\n\n      this.setState({\n        currentQuest: this.state.currentQuest + 1\n      });\n      this.setState({\n        userAns: null\n      }); // console.log(this.state.currentQuest);\n    };\n\n    this.checkAns = userAns => {\n      const _this$state = this.state,\n            answer = _this$state.answer,\n            scores = _this$state.scores;\n      this.setState({\n        userAns: answer,\n        disabled: false\n      });\n      console.log(userAns);\n\n      if (userAns === answer) {\n        console.log(\"Correct\");\n        this.setState({\n          scores: scores + 1\n        });\n      } else {\n        console.log(\"Wrong\");\n        alert(\"Correct answer is \" + answer);\n      }\n    };\n\n    this.logout = e => {\n      e.preventDefault();\n      fire.auth().signOut();\n      console.log(\"Logged out\");\n    };\n\n    this.pushtoDB = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      newRef.set({\n        ID: fire.auth().currentUser.uid,\n        UserEmail: fire.auth().currentUser.email,\n        // Username: this.state.userName,\n        Question: this.state.questions,\n        //Send data to DB to track for analysis\n        UserAnswer: this.state.userAns\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.pushtoDB2 = () => {\n      var ref = fire.database().ref(\"data\");\n      var newRef = ref.push();\n      newRef.set({\n        Score: this.state.scores\n      });\n      console.log(\"Sent to Database\");\n    };\n\n    this.finishQuiz = () => {\n      if (this.state.currentQuestion === Quizdata.length - 1) {\n        this.setState({\n          isEnd: true\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentQuest = this.state.currentQuest;\n\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          userAns = _this$state2.userAns,\n          options = _this$state2.options,\n          currentQuest = _this$state2.currentQuest,\n          pictures = _this$state2.pictures;\n\n    if (isEnd) {\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Quiz Finished\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Quiz score : \", this.state.scores, \"/\", Quizdata.length - 1));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"quizForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(ProgressBar, {\n        animated: true,\n        now: this.state.currentQuest * 9,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), this.state.questions, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Q\", this.state.currentQuest), this.state.pictures, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), options.map(option => React.createElement(Button, {\n        key: option.id,\n        className: \"ui floating message options\\n            \".concat(userAns === option ? \"selected\" : null, \"\\n           \"),\n        onClick: () => this.checkAns(option),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, option)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: () => this.checkAns(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"CHECK \", React.createElement(FaHorse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })), React.createElement(Button, {\n        onClick: () => {\n          this.nextQuestion();\n          this.pushtoDB();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"NEXT \", React.createElement(FaArrowRight, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"LogOut\"), currentQuest === Quizdata.length - 1 && React.createElement(Button, {\n        onClick: () => {\n          this.pushtoDB2();\n          this.finishQuiz();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Finish\"));\n    }\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/home/basil/farmsafety_app/src/components/quiz/quiz.js"],"names":["React","Component","fire","FaHorse","FaArrowRight","Button","Alert","ButtonGroup","Toast","ProgressBar","Questions","Quizdata","Login","Quiz","state","userAns","options","disabled","currentQuest","isEnd","scores","pictures","loadQuiz","setState","questions","question","answer","picture","console","log","nextQuestion","e","alert","checkAns","logout","preventDefault","auth","signOut","pushtoDB","ref","database","newRef","push","set","ID","currentUser","uid","UserEmail","email","Question","UserAnswer","pushtoDB2","Score","finishQuiz","currentQuestion","length","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","option","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n//import QuestionBox from \"./questionBox\";\nimport \"./quiz.css\";\n//import from \"./login\"\n//import useState from \"react\";\nimport fire from \"../../config/fire\";\nimport { FaHorse, FaArrowRight } from \"react-icons/fa\";\nimport {\n  Button,\n  Alert,\n  ButtonGroup,\n  Toast,\n  ProgressBar\n} from \"react-bootstrap\";\n\nimport Questions, { Quizdata } from \"./questions\";\nimport Login from \"./login\";\n//import { Label } from \"semantic-ui-react\";\nclass Quiz extends Component {\n  state = {\n    userAns: null,\n    options: [],\n    disabled: true,\n    currentQuest: 0,\n    isEnd: false,\n    scores: 0,\n    pictures: \"\"\n  };\n\n  loadQuiz = () => {\n    const { currentQuest } = this.state;\n    //  console.log(Quizdata[2].question);\n    this.setState(() => {\n      return {\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      };\n    });\n    console.log(this.state.answer);\n  };\n\n  nextQuestion = e => {\n    // e.preventDefault();\n    if (this.state.userAns === null) {\n      alert(\"choose an option\");\n      return;\n    }\n    this.setState({\n      currentQuest: this.state.currentQuest + 1\n    });\n    this.setState({\n      userAns: null\n    });\n    // console.log(this.state.currentQuest);\n  };\n\n  checkAns = userAns => {\n    const { answer, scores } = this.state;\n\n    this.setState({\n      userAns: answer,\n      disabled: false\n    });\n    console.log(userAns);\n    if (userAns === answer) {\n      console.log(\"Correct\");\n      this.setState({\n        scores: scores + 1\n      });\n    } else {\n      console.log(\"Wrong\");\n      alert(\"Correct answer is \" + answer);\n    }\n  };\n\n  componentDidMount() {\n    this.loadQuiz(); //loads quiz quiz data in\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentQuest } = this.state;\n    if (this.state.currentQuest !== prevState.currentQuest) {\n      this.setState({\n        disabled: true,\n        questions: Quizdata[currentQuest].question,\n        options: Quizdata[currentQuest].options,\n        answer: Quizdata[currentQuest].answer,\n        pictures: Quizdata[currentQuest].picture\n      });\n    }\n  }\n  logout = e => {\n    e.preventDefault();\n    fire.auth().signOut();\n    console.log(\"Logged out\");\n  };\n\n  pushtoDB = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    newRef.set({\n      ID: fire.auth().currentUser.uid,\n      UserEmail: fire.auth().currentUser.email,\n      // Username: this.state.userName,\n      Question: this.state.questions, //Send data to DB to track for analysis\n      UserAnswer: this.state.userAns\n    });\n\n    console.log(\"Sent to Database\");\n  };\n\n  pushtoDB2 = () => {\n    var ref = fire.database().ref(\"data\");\n    var newRef = ref.push();\n    newRef.set({\n      Score: this.state.scores\n    });\n    console.log(\"Sent to Database\");\n  };\n\n  finishQuiz = () => {\n    if (this.state.currentQuestion === Quizdata.length - 1) {\n      this.setState({\n        isEnd: true\n      });\n    }\n  };\n\n  render() {\n    const { userAns, options, currentQuest, pictures } = this.state;\n    if (isEnd) {\n      <div>\n        <Alert>Quiz Finished</Alert>\n        <span>\n          Quiz score : {this.state.scores}/{Quizdata.length - 1}\n        </span>\n      </div>;\n    } else {\n      return (\n        <div className=\"quizForm\">\n          <br></br>\n          <div>\n            <ProgressBar animated now={this.state.currentQuest * 9} />\n          </div>\n          {this.state.questions}\n          <br></br>\n          <p>Q{this.state.currentQuest}</p>\n\n          {this.state.pictures}\n          <br></br>\n          {options.map(option => (\n            <Button\n              key={option.id}\n              className={`ui floating message options\n            ${userAns === option ? \"selected\" : null}\n           `}\n              onClick={() => this.checkAns(option)}\n            >\n              {option}\n            </Button>\n          ))}\n\n          <br></br>\n          <Button onClick={() => this.checkAns()}>\n            CHECK <FaHorse />\n          </Button>\n          <Button\n            onClick={() => {\n              this.nextQuestion();\n              this.pushtoDB();\n            }}\n          >\n            NEXT <FaArrowRight />\n          </Button>\n\n          <br></br>\n\n          <Button onClick={this.logout}>LogOut</Button>\n\n          {currentQuest === Quizdata.length - 1 && (\n            <Button\n              onClick={() => {\n                this.pushtoDB2();\n                this.finishQuiz();\n              }}\n            >\n              Finish\n            </Button>\n          )}\n        </div>\n      );\n    }\n  }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}